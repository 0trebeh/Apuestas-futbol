{"version":3,"sources":["state-store/session/session.types.tsx","state-store/session/session.reducer.tsx","state-store/reducer.root.tsx","state-store/store.tsx","components/login.tsx","components/register.tsx","components/navigationDrawer.tsx","components/pageHeader.tsx","pages/home.tsx","components/balanceForm.tsx","pages/profile.tsx","components/bettingForm.tsx","pages/matches.tsx","pages/stats.tsx","pages/notifications.tsx","pages/predictions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SAVE_SESSION_DATA","CLEAR_SESSION_DATA","initialState","token","username","isSessionActive","balance","rootReducer","combineReducers","session","state","action","type","data","persistConfing","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","connector","connect","reduxSession","userData","props","useState","email","setEmail","password","setPassword","saving","setSaving","title","setTitle","number","setNumber","doLogin","a","axios","post","response","notification","success","message","placement","name","error","onClose","visible","footer","onCancel","style","backgroundColor","width","hoverable","layout","onFinish","onFinishFailed","Item","required","label","hasFeedback","rules","onChange","e","target","value","Password","disabled","htmlType","icon","LoadingOutlined","hidden","spin","color","phoneValidator","PhoneNumberUtil","RegisterPage","setName","address","setAddress","phone","setPhone","lastName","setLastName","id","setId","doRegister","form","FormData","append","description","validator","_","length","Promise","resolve","Number","isNaN","parseInt","reject","isValidNumber","parse","err","Error","min","max","getFieldValue","reduxClearState","history","useHistory","logout","info","get","headers","authorization","push","console","menuOptions","setLoginVisible","setRegisterVisible","closable","menuVisible","setMenuVisible","defaultSelectedKeys","Title","sessionActive","map","option","index","onClick","MenuComponent","loginVisible","registerVisible","subTitle","ghost","extra","MenuOutlined","setData","autoplay","draggable","swipeToSlide","adaptiveHeight","dots","dotPosition","cover","placeholder","preview","src","Meta","Option","Select","reduxSetBalance","loading","setLoading","Form","useForm","onSubmit","values","setFieldsValue","note","allowClear","Profile","Data","bets","Profit","load","getData","bind","deleteBet","this","setState","profile","res","profit","log","delete","item","onConfirm","bet","okText","status","cancelText","team_name","ammount","bet_name","prediction","bordered","active","paragraph","rows","labelStyle","cursor","size","dataSource","itemLayout","header","renderItem","_listItem","columns","dataIndex","paddingBottom","display","justifyContent","document","docStyles","View","Text","user","user_name","last_name","tournament_name","Date","created","toUTCString","substr","bet_type_name","side","winner","loser","fileName","textDecoration","padding","border","blob","url","React","Component","fontWeight","fontSize","StyleSheet","create","alignSelf","textAlign","margin","scoreRegex","goalsRegex","bet_type","setBet_type","team","setTeam","match","match_id","undefined","useEffect","level","select_val","home_team_id","away_team_id","verify","toString","tooltip","pattern","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","onPressEnter","handleSearch","marginBottom","fullscreen","onSelect","ee","SearchOutlined","handleReset","closeDropdown","searchText","searchedColumn","filterIcon","filtered","onFilter","record","toLowerCase","includes","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","date","children","sorter","recordA","recordB","getTime","sortDirections","filters","match_status","visibile","tournament","matches","moment","getFullYear","getMonth","getDate","fetchData","tabChanged","defaultActiveKey","centered","animated","onTabClick","TabPane","tab","top","topTeam","loading2","season","responseTeam","href","rel","columnsTopTeams","marginTop","home_team","away_team","substring","notifications","getNotifications","predictionMatches","responseMatchs","columnsMatches","defaults","baseURL","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"+XAAaA,EAAoB,oBACpBC,EAAqB,qBCM5BC,EAAwB,CAC5BC,MAAO,GACPC,SAAU,GACVC,iBAAiB,EACjBC,QAAS,GCRX,IAIeC,EAJKC,YAAgB,CAClCC,QDUK,WAGK,IAFVC,EAES,uDAFDR,EACRS,EACS,uCACT,OAAQA,EAAOC,MACb,KAAKZ,EACH,MAAO,CACLM,QAASK,EAAOE,KAAKP,QACrBD,gBAAiBM,EAAOE,KAAKR,gBAC7BF,MAAOQ,EAAOE,KAAKV,MACnBC,SAAUO,EAAOE,KAAKT,UAE1B,KAAKH,EACH,MAAO,CACLK,QAASJ,EAAaI,QACtBD,iBAAiB,EACjBF,MAAOD,EAAaC,MACpBC,SAAUF,EAAaE,UAE3B,IAAK,mBACH,OAAO,2BACFM,GADL,IAEEJ,QAASK,EAAOL,UAEpB,QACE,OAAOI,MEjCPI,EAAiB,CACrBC,IAAK,OACLC,aAGIC,EAAmBC,YACvBJ,EACAP,GAGIY,EAAQC,YAAYH,GAEtBI,EAAYC,YAAaH,G,wICwHdI,MA5HGC,YAAQ,KANC,CACzBC,aAAc,SAACC,GAAD,MAAwB,CACpCd,KAAM,oBACNC,KAAMa,KA+HKH,EApHf,SAAmBI,GAAe,IAAD,EACLC,mBAAS,IADJ,mBACxBC,EADwB,KACjBC,EADiB,OAECF,mBAAS,IAFV,mBAExBG,EAFwB,KAEdC,EAFc,OAGHJ,oBAAS,GAHN,mBAGxBK,EAHwB,KAGhBC,EAHgB,OAILN,mBAAS,kBAJJ,mBAIxBO,EAJwB,KAIjBC,EAJiB,OAKHR,mBAAS,GALN,mBAKxBS,EALwB,KAKhBC,EALgB,KAOzBC,EAAO,uCAAG,4BAAAC,EAAA,6DACdN,GAAU,GACVE,EAAS,kBAFK,kBAISK,IAAMC,KAAK,eAAgB,CAC9Cb,MAAOA,EACPE,SAAUA,IANA,OAIRY,EAJQ,OAQZC,IAAaC,QAAQ,CACnBC,QAAS,4BACTC,UAAW,aAEbpB,EAAMF,aAAa,CACjBpB,iBAAiB,EACjBF,MAAOwC,EAAS9B,KAAKV,MACrBC,SAAUuC,EAAS9B,KAAKmC,KACxB1C,QAASqC,EAAS9B,KAAKP,UAhBb,kDAmBZsC,IAAaK,MAAM,CACjBH,QAAS,KAAIH,SAAS9B,KAAKiC,QAC3BC,UAAW,aArBD,yBAwBZb,GAAU,GACVE,EAAS,kBACTT,EAAMuB,UA1BM,6EAAH,qDAyCb,OACE,cAAC,IAAD,CAAOC,QAASxB,EAAMwB,QAASC,OAAQ,KAAMC,SAAU1B,EAAMuB,QAA7D,SACE,cAAC,IAAD,CACEf,MAAO,gBACPmB,MAAO,CACLC,gBAAiB,UACjBC,MAAO,QAETC,WAAS,EANX,SAOE,eAAC,IAAD,CACEC,OAAQ,WACRC,SAAUpB,EACVqB,eAxBuB,WACd,IAAXvB,GACFC,EAAU,GACVM,IAAaK,MAAM,CACjBH,QAAS,8CACTC,UAAW,cAGbT,EAAUD,EAAS,IAajB,UAIE,cAAC,IAAKwB,KAAN,CACEC,UAAU,EACVC,MAAO,SACPf,KAAM,SACNgB,aAAW,EACXC,MAAO,CACL,CACEH,UAAU,EACVhB,QAAS,wBAEX,CACElC,KAAM,QACNkC,QAAS,mCAZf,SAeE,cAAC,IAAD,CAAOoB,SAAU,SAAAC,GAAC,OAAIrC,EAASqC,EAAEC,OAAOC,YAE1C,cAAC,IAAKR,KAAN,CACEC,UAAU,EACVC,MAAO,gBACPf,KAAM,gBACNgB,aAAW,EACXC,MAAO,CACL,CACEH,UAAU,EACVhB,QAAS,iCARf,SAWE,cAAC,IAAMwB,SAAP,CACE1D,KAAM,WACNsD,SAAU,SAAAC,GAAC,OAAInC,EAAYmC,EAAEC,OAAOC,YAGxC,cAAC,IAAKR,KAAN,UACE,cAAC,IAAD,CACEU,SAAUtC,EACVuC,SAAU,SACVC,KACE,cAACC,EAAA,EAAD,CACEC,QAAS1C,EACT2C,MAAM,EACNtB,MAAO,CACLuB,MAAO,UARf,SAYG1C,gBC3HT2C,EAAiB,I,OAAIC,iBAuNZC,EAjNM,SAACrD,GAAkB,IAAD,EACbC,mBAAS,IADI,mBAC9BoB,EAD8B,KACxBiC,EADwB,OAELrD,mBAAS,IAFJ,mBAE9BG,EAF8B,KAEpBC,EAFoB,OAGTJ,oBAAS,GAHA,mBAG9BK,EAH8B,KAGtBC,EAHsB,OAIXN,mBAAS,IAJE,mBAI9BC,EAJ8B,KAIvBC,EAJuB,OAKPF,qBALO,mBAK9BsD,EAL8B,KAKrBC,EALqB,OAMXvD,qBANW,mBAM9BwD,EAN8B,KAMvBC,EANuB,OAOLzD,qBAPK,mBAO9B0D,EAP8B,KAOpBC,EAPoB,OAQjB3D,qBARiB,mBAQ9B4D,EAR8B,KAQ1BC,EAR0B,OASX7D,mBAAS,eATE,mBAS9BO,EAT8B,KASvBC,EATuB,KAW/BsD,EAAU,uCAAG,4BAAAlD,EAAA,6DACjBN,GAAU,GACVE,EAAS,cAFQ,UAIXuD,EAAO,IAAIC,UACVC,OAAO,OAAQ7C,GACpB2C,EAAKE,OAAO,QAAShE,GACrB8D,EAAKE,OAAO,WAAY9D,GACpBqD,GACFO,EAAKE,OAAO,QAAST,GAEnBE,GACFK,EAAKE,OAAO,YAAaP,GAEvBJ,GACFS,EAAKE,OAAO,UAAWX,GAErBM,GACFG,EAAKE,OAAO,WAAYL,GAlBX,UAoBT/C,IAAMC,KAAK,cAAeiD,GApBjB,QAqBf/C,IAAaC,QAAQ,CACnBC,QAAS,8BACTC,UAAW,aAEbpB,EAAMuB,UAzBS,kDA2BfN,IAAaK,MAAM,CACjBH,QAAS,2BACTgD,YAAa,8CACb/C,UAAW,aA9BE,yBAiCfb,GAAU,GACVE,EAAS,eAlCM,6EAAH,qDAsChB,OACE,cAAC,IAAD,CAAOe,QAASxB,EAAMwB,QAASC,OAAQ,KAAMC,SAAU1B,EAAMuB,QAA7D,SACE,cAAC,IAAD,CACEf,MAAO,kBACPmB,MAAO,CACLC,gBAAiB,UACjBC,MAAO,QAETC,WAAS,EANX,SAOE,eAAC,IAAD,CAAMC,OAAQ,WAAYC,SAAU+B,EAApC,UACE,cAAC,IAAK7B,KAAN,CACEC,UAAU,EACVC,MAAO,SACPf,KAAM,SACNiB,MAAO,CACL,CACEH,UAAU,EACVhB,QAAS,yBAPf,SAUE,cAAC,IAAD,CAAOoB,SAAU,SAAAC,GAAC,OAAIc,EAAQd,EAAEC,OAAOC,YAEzC,cAAC,IAAKR,KAAN,CAAWE,MAAO,WAAYf,KAAM,WAApC,SACE,cAAC,IAAD,CAAOkB,SAAU,SAAAC,GAAC,OAAIoB,EAAYpB,EAAEC,OAAOC,YAE7C,cAAC,IAAKR,KAAN,CACEC,UAAU,EACVC,MAAO,SACPf,KAAM,SACNgB,aAAW,EACXC,MAAO,CACL,CACErD,KAAM,QACNkC,QAAS,kCAEX,CACEgB,UAAU,EACVhB,QAAS,uCAZf,SAeE,cAAC,IAAD,CAAOoB,SAAU,SAAAC,GAAC,OAAIrC,EAASqC,EAAEC,OAAOC,YAE1C,cAAC,IAAKR,KAAN,CAAWE,MAAO,YAAaf,KAAM,YAArC,SACE,cAAC,IAAD,CAAOkB,SAAU,SAAAC,GAAC,OAAIgB,EAAWhB,EAAEC,OAAOC,YAE5C,cAAC,IAAKR,KAAN,CACEE,MAAO,qBACPf,KAAM,qBACNgB,aAAW,EACXC,MAAO,CACL,CACE8B,UAAW,SAACC,EAAG3B,GACb,GAAqB,IAAjBA,EAAM4B,OACR,OAAOC,QAAQC,UAEjB,GAAIC,OAAOC,MAAMD,OAAOE,SAASjC,IAC/B,OAAO6B,QAAQK,OAAO,iBAEtB,IAEE,OADAzB,EAAe0B,cAAc1B,EAAe2B,MAAMpC,IAC3C6B,QAAQC,UACf,MAAOO,GACP,OAAOR,QAAQK,OAAO,oCAjBlC,SAuBE,cAAC,IAAD,CAAOrC,SAAU,SAAAC,GAAC,OAAIkB,EAASlB,EAAEC,OAAOC,YAE1C,cAAC,IAAKR,KAAN,CACEE,MAAO,MACPf,KAAM,MACNgB,aAAW,EACXC,MAAO,CACL,CACE8B,UAAW,SAACC,EAAG3B,GACb,OAAqB,IAAjBA,EAAM4B,OACDC,QAAQC,UAEbC,OAAOC,MAAMD,OAAOE,SAASjC,EAAO,KAC/B6B,QAAQK,OAAO,IAAII,MAAM,kBAE9BtC,EAAM4B,OAAS,EACVC,QAAQK,OAAO,IAAII,MAAM,kBAE3BT,QAAQC,aAhBvB,SAoBE,cAAC,IAAD,CAAOjC,SAAU,SAAAC,GAAC,OAAIsB,EAAMtB,EAAEC,OAAOC,YAEvC,cAAC,IAAKR,KAAN,CACEC,UAAU,EACVC,MAAO,gBACPf,KAAM,gBACNiB,MAAO,CACL,CACEH,UAAU,EACVhB,QAAS,gCAEX,CACE8D,IAAK,EACLC,IAAK,GACL/D,QAAS,iDAGbkB,aAAW,EAfb,SAgBE,cAAC,IAAMM,SAAP,CAAgBJ,SAAU,SAAAC,GAAC,OAAInC,EAAYmC,EAAEC,OAAOC,YAEtD,cAAC,IAAKR,KAAN,CACEC,UAAU,EACVC,MAAO,4BACPf,KAAM,eACNgB,aAAW,EACXC,MAAO,CACL,CACEH,UAAU,EACVhB,QAAS,8BAEX,CACE8D,IAAK,EACLC,IAAK,GACL/D,QAAS,gDAEX,gBAAEgE,EAAF,EAAEA,cAAF,MAAsB,CACpBf,UADoB,SACVC,EAAG3B,GACX,OAAKA,GAASyC,EAAc,mBAAkBzC,EAGvC6B,QAAQK,OACb,IAAII,MAAM,uCAHHT,QAAQC,cAlBzB,SA0BE,cAAC,IAAM7B,SAAP,MAEF,cAAC,IAAKT,KAAN,UACE,cAAC,IAAD,CACEU,SAAUtC,EACVuC,SAAU,SACVC,KACE,cAACC,EAAA,EAAD,CACEC,QAAS1C,EACT2C,MAAM,EACNtB,MAAO,CACLuB,MAAO,UARf,SAYG1C,c,0BCvEAZ,EAzHGC,aAHM,SAACd,GAAD,MAAuB,CAC7CP,MAAOO,EAAMD,QAAQN,SAJI,CACzB4G,gBAAiB,iBAAO,CAACnG,KAAM,wBA8HlBW,EA9GU,SAACI,GACxB,IAAMqF,EAAUC,cAEVC,EAAM,uCAAG,sBAAA1E,EAAA,6DACbI,IAAauE,KAAK,CAChBpE,UAAW,UACXD,QAAS,uBAHE,kBAMLL,IAAM2E,IAAI,gBAAiB,CAC/BC,QAAS,CACPC,cAAe3F,EAAMxB,SARd,OAWXwB,EAAMoF,kBACNnE,IAAaC,QAAQ,CACnBC,QAAS,oBACTC,UAAW,aAEbiE,EAAQO,KAAK,KAhBF,gDAkBX3E,IAAaK,MAAM,CACjBH,QAAS,yBACTgD,YAAa,8BACb/C,UAAW,aAEbyE,QAAQvE,MAAR,MAvBW,yDAAH,qDA2BNwE,EAA6B,CACjC,CACEzE,KAAM,mBACNrC,OAAQ,kBAAMqG,EAAQO,KAAK,MAC3B3G,KAAM,UAER,CACEoC,KAAM,eACNrC,OAAQ,kBAAMqG,EAAQO,KAAK,kBAC3B3G,KAAM,WAER,CACEoC,KAAM,eACNrC,OAAQ,kBAAMqG,EAAQO,KAAK,kBAC3B3G,KAAM,WAER,CACEoC,KAAM,sBACNrC,OAAQ,kBAAMqG,EAAQO,KAAK,aAC3B3G,KAAM,WAER,CACEoC,KAAM,iBACNrC,OAAQ,kBAAMqG,EAAQO,KAAK,mBAC3B3G,KAAM,WAER,CACEoC,KAAM,iBACNrC,OAAQgB,EAAM+F,gBACd9G,KAAM,SAER,CACEoC,KAAM,cACNrC,OAAQgB,EAAMgG,mBACd/G,KAAM,SAER,CACEoC,KAAM,SACNrC,OAAQ,kBAAMqG,EAAQO,KAAK,aAC3B3G,KAAM,WAER,CACEoC,KAAM,gBACNrC,OAAQ,kBAAMuG,KACdtG,KAAM,YAIV,OACE,cAAC,IAAD,CACEmC,UAAW,QACX6E,UAAU,EACVzE,QAASxB,EAAMkG,YACf3E,QAASvB,EAAMmG,eAJjB,SAKE,eAAC,IAAD,CAAMC,oBAAqB,CAAC,KAA5B,UACE,cAAC,IAAWC,MAAZ,mBACCrG,EAAMsG,cACHR,EAAYS,KAAI,SAACC,EAAQC,GACvB,MAAoB,UAAhBD,EAAOvH,KAEP,cAAC,IAAKiD,KAAN,CAAuBwE,QAASF,EAAOxH,OAAvC,SACGwH,EAAOnF,MADMoF,GAIR,QAEdX,EAAYS,KAAI,SAACC,EAAQC,GACvB,MAAoB,YAAhBD,EAAOvH,KAEP,cAAC,IAAKiD,KAAN,CAAuBwE,QAASF,EAAOxH,OAAvC,SACGwH,EAAOnF,MADMoF,GAIR,gBCnFXE,MAvCf,SAAuB3G,GAAe,IAAD,EACGC,oBAAS,GADZ,mBAC5BiG,EAD4B,KACfC,EADe,OAEKlG,oBAAS,GAFd,mBAE5B2G,EAF4B,KAEdb,EAFc,OAGW9F,oBAAS,GAHpB,mBAG5B4G,EAH4B,KAGXb,EAHW,KAKnC,OACE,gCACE,cAAC,IAAD,CACExF,MAAO,MACPsG,SAAU9G,EAAMQ,MAChBuG,OAAO,EACPpF,MAAO,CACLC,gBAAiB,WAEnBoF,MAAO,CACL,cAACC,EAAA,EAAD,CAEEP,QAAS,kBAAMP,GAAgBD,KAD1B,eAIX,cAAC,EAAD,CACE1E,QAASoF,EACTrF,QAAS,kBAAMwE,GAAiBa,MAElC,cAAC,EAAD,CACEpF,QAASqF,EACTtF,QAAS,kBAAMyE,GAAoBa,MAErC,cAAC,EAAD,CACEX,YAAaA,EACbH,gBAAiB,kBAAMA,GAAiBa,IACxCN,cAAetG,EAAMsG,cACrBH,eAAgB,kBAAMA,GAAgBD,IACtCF,mBAAoB,kBAAMA,GAAoBa,U,kBCiEvCjH,MA3FGC,aAVM,SAACd,GAAD,MAAuB,CAC7CN,SAAUM,EAAMD,QAAQL,SACxB6H,cAAevH,EAAMD,QAAQJ,mBAEJ,CACzBwI,QAAS,SAAChI,GAAD,MAAoB,CAC3BD,KAAM,oBACNC,KAAMA,KA8FKU,EAtFf,SAAcI,GACZ,OACE,gCACE,cAAC,EAAD,CAAesG,cAAetG,EAAMsG,cAAe9F,MAAO,oBAC1D,eAAC,IAAD,CACE2G,UAAU,EACVC,WAAW,EACXC,cAAc,EACdC,gBAAgB,EAChBC,MAAM,EACNC,YAAa,SANf,UAOE,cAAC,IAAD,CACE1F,WAAW,EACX2F,MACE,cAAC,IAAD,CACEC,YAAa,cAAC3E,EAAA,EAAD,CAAiBE,MAAM,IACpC0E,SAAS,EACTC,IACE,6FAPR,SAWE,cAAC,IAAKC,KAAN,CACErH,MAAO,WACP2D,YACE,iEAIN,cAAC,IAAD,CACErC,WAAW,EACX2F,MACE,cAAC,IAAD,CACEC,YAAa,cAAC3E,EAAA,EAAD,CAAiBE,MAAM,IACpC0E,SAAS,EACTC,IACE,iGAPR,SAWE,cAAC,IAAKC,KAAN,CACErH,MAAO,eACP2D,YACE,wFAIN,cAAC,IAAD,CACErC,WAAW,EACX2F,MACE,cAAC,IAAD,CACEC,YAAa,cAAC3E,EAAA,EAAD,CAAiBE,MAAM,IACpC0E,SAAS,EACTC,IACE,yFAPR,SAWE,cAAC,IAAKC,KAAN,CACErH,MAAO,WACP2D,YAAa,sDAGjB,cAAC,IAAD,CACErC,WAAW,EACX2F,MACE,cAAC,IAAD,CACEC,YAAa,cAAC3E,EAAA,EAAD,CAAiBE,MAAM,IACpC0E,SAAS,EACTC,IACE,iIAPR,SAWE,cAAC,IAAKC,KAAN,CACErH,MAAO,eACP2D,YACE,sF,8DC9FN2D,GAAWC,KAAXD,OA4KOlI,OAjKGC,aAHM,SAACd,GAAD,MAAuB,CAC7CP,MAAOO,EAAMD,QAAQN,SAPI,CACzBwJ,gBAAiB,SAACrJ,GAAD,MAAsB,CACrCM,KAAM,mBACNN,QAASA,KAuKEiB,EAjJf,SAAqBI,GAAe,IAAD,EACHC,oBAAS,GADN,mBAC1BgI,EAD0B,KACjBC,EADiB,OAEPjI,mBAAS,UAFF,mBAE1BO,EAF0B,KAEnBC,EAFmB,OAGlB0H,IAAKC,UAAbpE,EAH0B,oBAK3BqE,EAAQ,uCAAG,WAAOC,GAAP,eAAAzH,EAAA,sEAEbqH,GAAW,GACXzH,EAAS,IAHI,SAIUK,IAAMC,KAAK,sBAAuBuH,EAAQ,CAC/D5C,QAAS,CAACC,cAAe3F,EAAMxB,SALpB,OAIPwC,EAJO,OAObhB,EAAMgI,gBAAgBhH,EAAS9B,KAAKP,SACpCwC,KAAQD,QAAQ,sBARH,kDAUbC,KAAQG,MAAM,KAAIN,SAAS9B,KAAKiC,SAVnB,yBAYb+G,GAAW,GACXzH,EAAS,UAbI,6EAAH,sDA4Cd,OACE,cAAC,IAAD,CAAOe,QAASxB,EAAMwB,QAASE,SAAU1B,EAAM0B,SAAUD,OAAQ,KAAjE,SACE,eAAC,IAAD,CAAMM,OAAQ,WAAYC,SAAUqG,EAApC,UAEE,cAAC,IAAKnG,KAAN,CACEE,MAAO,QACPf,KAAM,OACNgB,aAAW,EAHb,SAII,eAAC,KAAD,CACEqF,YAAY,8CACZnF,SArCW,SAACG,GACtB,OAAQA,GACN,IAAK,MAIH,YAHAsB,EAAKuE,eAAe,CAClBC,KAAM,QAIV,IAAK,UAIH,YAHAxE,EAAKuE,eAAe,CAClBC,KAAM,YAIV,IAAK,KAIH,YAHAxE,EAAKuE,eAAe,CAClBC,KAAM,oBAIV,IAAK,aACHxE,EAAKuE,eAAe,CAClBC,KAAM,iBAgBFC,YAAU,EAHZ,UAKE,cAACX,GAAD,CAAQpF,MAAM,MAAd,iBACA,cAACoF,GAAD,CAAQpF,MAAM,UAAd,qBACA,cAACoF,GAAD,CAAQpF,MAAM,aAAd,wBACA,cAACoF,GAAD,CAAQpF,MAAM,KAAd,kCAGN,cAAC,IAAKR,KAAN,CACEE,MAAO,aACPf,KAAM,MACNgB,aAAW,EACXC,MAAO,CACL,CAACH,UAAU,EAAMhB,QAAS,2BAC1B,CACE8D,IAAK,EACLC,IAAK,EACL/D,QAAS,wBATf,SAYE,cAAC,IAAD,CAAOlC,KAAM,aAEf,cAAC,IAAKiD,KAAN,CACEE,MAAO,mBACPf,KAAM,aACNgB,aAAW,EACXC,MAAO,CACL,CAACH,UAAU,EAAMhB,QAAS,iCAC1B,CACE8D,IAAK,GACLC,IAAK,GACL/D,QAAS,8BATf,SAYE,cAAC,IAAD,CAAOlC,KAAM,aAEf,cAAC,IAAKiD,KAAN,CACEE,MAAO,QACPf,KAAM,OACNgB,aAAW,EACXC,MAAO,CACL,CACEH,UAAU,EACVhB,QAAS,+BAPf,SAUE,cAAC,IAAD,CAAOlC,KAAM,WAEf,cAAC,IAAKiD,KAAN,CACEE,MAAO,qBACPC,aAAW,EACXhB,KAAM,UACNiB,MAAO,CACL,CACEH,UAAU,EACVhB,QAAS,uBAEX,CACE8D,IAAK,EACL9D,QAAS,mCAXf,SAcE,cAAC,IAAD,CAAOlC,KAAM,aAEf,cAAC,IAAKiD,KAAN,UACE,cAAC,IAAD,CACEU,SAAUqF,EACVpF,SAAU,SACVC,KACE,cAACC,EAAA,EAAD,CACEC,QAASiF,EACThF,MAAM,EACNtB,MAAO,CACLuB,MAAO,UARf,SAYG1C,c,qECpIPZ,GAAYC,aAZM,SAACd,GAAD,MAAuB,CAC7CN,SAAUM,EAAMD,QAAQL,SACxB6H,cAAevH,EAAMD,QAAQJ,gBAC7BF,MAAOO,EAAMD,QAAQN,MACrBG,QAASI,EAAMD,QAAQH,WAEE,CACzBqJ,gBAAiB,SAACrJ,GAAD,MAAsB,CACrCM,KAAM,mBACNN,QAASA,MAgBP+J,G,oDACJ,WAAY1I,GAAe,IAAD,8BACxB,cAAMA,IACDjB,MAAQ,CACX4J,KAAM,GACNC,KAAM,GACNC,OAAQ,EACRC,MAAM,EACN5I,MAAO,GACPsB,SAAS,GAEX,EAAKuH,QAAQC,KAAb,gBACA,EAAKC,UAAUD,KAAf,gBAXwB,E,kFAc1B,sGAEIE,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEE+J,MAAM,KAJZ,SAM2BhI,IAAM2E,IAAI,cAAe,CAC9CC,QAAS,CAACC,cAAeuD,KAAKlJ,MAAMxB,SAP1C,UASwC,mCAH9BwC,EANV,QASiB9B,KAAKkK,QAAQlJ,MAT9B,iCAUwBY,IAAM2E,IAAI,eAAgB,CAC1CC,QAAS,CAACC,cAAeuD,KAAKlJ,MAAMxB,SAX5C,OAUY6K,EAVZ,OAaMH,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEE4J,KAAMU,EAAInK,KAAK0J,KACfC,OAAQQ,EAAInK,KAAKoK,UAhBzB,QAmBIJ,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEEmB,MAAOc,EAAS9B,KAAKkK,QAAQlJ,MAC7B4I,MAAM,EACNF,KAAM5H,EAAS9B,KAAK0J,QAEtBM,KAAKlJ,MAAMgI,gBAAgBhH,EAAS9B,KAAKkK,QAAQzK,SAzBrD,kDA2BIkH,QAAQ0D,IAAR,MACApI,KAAQG,MAAM,+BA5BlB,0D,oHAgCA,WAAgBuC,GAAhB,eAAAhD,EAAA,sEAEIM,KAAQqE,KAAK,yBAFjB,SAG2B1E,IAAM0I,OAAN,oBAA0B3F,GAAM,CACrD6B,QAAS,CAACC,cAAeuD,KAAKlJ,MAAMxB,SAJ1C,OAGUwC,EAHV,OAMIkI,KAAKlJ,MAAMgI,gBAAgBhH,EAAS9B,KAAKP,SACzCwC,KAAQD,QAAQ,qBAPpB,gDASIC,KAAQG,MAAM,6BATlB,yBAWI4H,KAAKH,UAXT,4E,sFAeA,WACEG,KAAKH,Y,uBAGP,SAAkBU,EAAWhD,GAAgB,IAAD,OAC1C,OACE,cAAC,KAAD,CACEjG,MAAO,wBACPkJ,UAAW,kBAAM,EAAKT,UAAUQ,EAAKE,MACrCC,OAAwB,YAAhBH,EAAKI,OAAuB,mBAAqB,SACzDC,WAAY,IAJd,SAKE,cAAC,KAAK5H,KAAN,UACE,eAAC,KAAD,CAAcH,OAAQ,WAAYvB,MAAOiJ,EAAKM,UAA9C,UACE,cAAC,KAAa7H,KAAd,CAAmBE,MAAO,kBAA1B,oBACOqH,EAAKO,WAEZ,cAAC,KAAa9H,KAAd,CAAmBE,MAAO,kBAA1B,SACGqH,EAAKQ,WAER,cAAC,KAAa/H,KAAd,CAAmBE,MAAO,SAA1B,SACGqH,EAAKI,SAER,cAAC,KAAa3H,KAAd,CAAmBE,MAAO,aAA1B,SACGqH,EAAKS,iBAZIzD,O,oBAoBtB,WAAU,IAAD,OA2CP,OACE,gCACE,cAAC,EAAD,CACEH,cAAe4C,KAAKlJ,MAAMsG,cAC1B9F,MAAO,WAET,8BACwB,kCAArB0I,KAAKnK,MAAMmB,MACV,gCACE,eAAC,KAAD,CAAc6B,OAAQ,WAAYoI,UAAQ,EAA1C,UACE,cAAC,KAAajI,KAAd,CAAmBE,MAAO,SAA1B,SACE,cAAC,KAAD,CACEgI,QAAM,EACNnC,QAASiB,KAAKnK,MAAM+J,KACpBuB,UAAW,CAACC,KAAM,GAHpB,SAIGpB,KAAKlJ,MAAMvB,aAGhB,cAAC,KAAayD,KAAd,CAAmBE,MAAO,SAA1B,SACE,cAAC,KAAD,CACEgI,QAAM,EACNnC,QAASiB,KAAKnK,MAAM+J,KACpBuB,UAAW,CAACC,KAAM,GAHpB,SAIGpB,KAAKnK,MAAMmB,UAGhB,cAAC,KAAagC,KAAd,CAAmBE,MAAO,QAAST,MAAO4I,GAA1C,SACE,eAAC,KAAD,CACEH,QAAM,EACNnC,QAASiB,KAAKnK,MAAM+J,KACpBuB,UAAW,CAACC,KAAM,GAHpB,qBAIOpB,KAAKlJ,MAAMrB,SACf,KACD,cAAC,KAAD,CACEuE,MAAO,UACPvB,MAAO,CAAC6I,OAAQ,WAChB9D,QAAS,kBACP,EAAKyC,SAAL,2BAAkB,EAAKpK,OAAvB,IAA8ByC,SAAS,MAJ3C,qCAWN,cAAC,KAAD,CACEyG,QAASiB,KAAKnK,MAAM+J,KACpBqB,UAAQ,EACRM,KAAM,QACNC,WAAYxB,KAAKnK,MAAM6J,KACvB+B,WAAY,aACZC,OAAQ,6CACRC,WAAY3B,KAAK4B,UAAU9B,KAAKE,QAElC,cAAC,GAAD,CACE1H,QAAS0H,KAAKnK,MAAMyC,QACpBE,SAAU,kBAAM,EAAKyH,SAAL,2BAAkB,EAAKpK,OAAvB,IAA8ByC,SAAS,WAI3D,gCACE,cAAC,KAAD,CACEkJ,WAAYxB,KAAKnK,MAAM4J,KACvBoC,QAxGI,CACd,CACEvK,MAAO,SACPwK,UAAW,YACX5L,IAAK,aAEP,CACEoB,MAAO,WACPwK,UAAW,YACX5L,IAAK,aAEP,CACEoB,MAAO,SACPwK,UAAW,kBACX5L,IAAK,mBAEP,CACEoB,MAAO,QACPwK,UAAW,UACX5L,IAAK,WAEP,CACEoB,MAAO,UACPwK,UAAW,UACX5L,IAAK,WAEP,CACEoB,MAAO,kBACPwK,UAAW,gBACX5L,IAAK,iBAEP,CACEoB,MAAO,SACPwK,UAAW,YACX5L,IAAK,aAEP,CACEoB,MAAO,YACPwK,UAAW,OACX5L,IAAK,SAkEGqL,KAAK,QACLxC,QAASiB,KAAKnK,MAAM+J,OAEtB,sDAAyBI,KAAKnK,MAAM8J,UACpC,8CAAqC,GAApBK,KAAKnK,MAAM8J,UAC5B,qBACElH,MAAO,CACLsJ,cAAe,GACfC,QAAS,OACTC,eAAgB,UAJpB,SAME,cAAC,mBAAD,CACEC,SACE,eAAC,YAAD,WACE,cAAC,QAAD,UACE,eAAC,QAAD,CAAMzJ,MAAO0J,GAAUC,KAAvB,UACE,cAAC,QAAD,CAAM3J,MAAO0J,GAAUE,KAAvB,kCAGA,eAAC,QAAD,CAAM5J,MAAO0J,GAAUE,KAAvB,iCACuBrC,KAAKnK,MAAM8J,UAElC,eAAC,QAAD,CAAMlH,MAAO0J,GAAUE,KAAvB,yBACmC,GAApBrC,KAAKnK,MAAM8J,eAI7BK,KAAKnK,MAAM4J,KAAKpC,KAAI,SAACiF,EAAM/E,GAC1B,OACE,cAAC,QAAD,UACE,eAAC,QAAD,CAAM9E,MAAO0J,GAAUC,KAAvB,UACE,eAAC,QAAD,CAAM3J,MAAO0J,GAAUE,KAAvB,wBACc9E,EAAQ,KAEtB,eAAC,QAAD,yBACc+E,EAAKC,UADnB,IAC+BD,EAAKE,aAEpC,eAAC,QAAD,sBAAeF,EAAKG,mBACpB,eAAC,QAAD,oBACS,IACN,IAAIC,KAAKJ,EAAKK,SACZC,cACAC,OAAO,EAAG,OAEf,eAAC,QAAD,+BAAwBP,EAAKQ,iBAC7B,eAAC,QAAD,sBAAeR,EAAKxB,WACpB,eAAC,QAAD,sBAAewB,EAAKzB,aACpB,eAAC,QAAD,yBAAkByB,EAAKS,QACvB,eAAC,QAAD,qCAC0BT,EAAKzB,UAAW,IACvCyB,EAAKU,OACF,UACAV,EAAKW,MACL,YACA,0BAQlBC,SACE,aACA,IAAIR,MAAOE,cAAcC,OAAO,EAAG,IACnC,OAEFpK,MAAO,CACL0K,eAAgB,OAChBC,QAAS,OACTpJ,MAAO,UACPtB,gBAAiB,UACjB2K,OAAQ,qBA7DZ,SA+DG,cAAEC,KAAF,EAAQC,IAAR,IAAaxE,EAAb,EAAaA,QAAb,EAAsB3G,MAAtB,OACC2G,EAAU,sBAAwB,gC,GAlRhCyE,IAAMC,WA8RtBpC,GAAkC,CACtCqC,WAAY,OACZC,SAAU,IAGNxB,GAAYyB,cAAWC,OAAO,CAClCzB,KAAM,CACJ0B,UAAW,SACXC,UAAW,WAEb1B,KAAM,CACJ2B,OAAQ,MAIGtN,MAAU8I,I,6DC9UnB9I,GAAYC,aAJM,SAACd,GAAD,MAAuB,CAC7CP,MAAOO,EAAMD,QAAQN,MACrBG,QAASI,EAAMD,QAAQH,WARE,CACzBqJ,gBAAiB,SAACrJ,GAAD,MAAsB,CACrCM,KAAM,mBACNN,QAASA,MAQPwO,GAAqB,2BACrBC,GAAqB,gBAwMZxN,WAhLf,SAAqBI,GAAe,IAAD,EACHC,oBAAS,GADN,mBAC1BgI,EAD0B,KACjBC,EADiB,OAEPjI,mBAAS,UAFF,mBAE1BO,EAF0B,KAEnBC,EAFmB,OAGDR,qBAHC,mBAG1BoN,EAH0B,KAGhBC,EAHgB,OAITrN,qBAJS,mBAI1BsN,EAJ0B,KAIpBC,EAJoB,KAoC3BnF,EAAQ,uCAAG,WAAOC,GAAP,iBAAAzH,EAAA,kEAERwM,EAFQ,sBAGL,IAAIrI,MAAM,kCAHL,YAKTsD,EAAO0B,SAAW,GALT,sBAML,IAAIhF,MAAM,+BANL,YAQTsD,EAAO0B,QAAUhK,EAAMrB,SARd,sBASL,IAAIqG,MAAM,sBATL,cAWbkD,GAAW,GACXzH,EAAS,qBAZI,UAaUK,IAAMC,KAC3B,YADqB,2BAGhBuH,GAHgB,IAInBmF,MAAK,UAAEzN,EAAMyN,aAAR,aAAE,EAAaC,SACpBH,KAAMA,IAER,CACE7H,QAAS,CAACC,cAAe3F,EAAMxB,SArBtB,QAaPwC,EAbO,OAwBbhB,EAAMgI,gBAAgBhH,EAAS9B,KAAKP,SACpC2J,EAAO+E,cAAWM,EAClBxM,KAAQD,QAAQ,sBA1BH,kDA4BbC,KAAQG,MAAM,uCA5BD,yBA8Bb4G,GAAW,GACXzH,EAAS,UA/BI,6EAAH,sDAwCd,OALAmN,qBAAU,WACRN,OAAYK,GACZH,OAAQG,KACP,CAAC3N,EAAMwB,UAGR,eAAC,IAAD,CAAOA,QAASxB,EAAMwB,QAASE,SAAU1B,EAAM0B,SAAUD,OAAQ,KAAjE,UACE,eAAC,IAAW4E,MAAZ,CAAkBwH,MAAO,EAAzB,4BACkB7N,EAAMrB,WAExB,eAAC,IAAD,CAAMoD,OAAQ,WAAYC,SAAUqG,EAApC,UACE,cAAC,IAAKnG,KAAN,CACEE,MAAO,kBACPC,aAAW,EACXhB,KAAM,WACNiB,MAAO,CACL,CACEH,UAAU,EACVhB,QAAS,mCAPf,SAUE,eAAC,KAAD,CAAQsH,YAAU,EAAClG,SAAU,SAAAG,GAAK,OAtF3B,SAACoL,GAEd,GADAR,EAAYQ,GACPA,EAIL,OAAQA,GACN,IAAK,IAAM,IAAD,EACRN,EAAO,UAACxN,EAAMyN,aAAP,aAAC,EAAaM,cACrB,MAEF,IAAK,IAAM,IAAD,EACRP,EAAO,UAACxN,EAAMyN,aAAP,aAAC,EAAaO,cACrB,MAEF,IAAK,KAAO,IAAD,EACTR,EAAO,UAACxN,EAAMyN,aAAP,aAAC,EAAaM,cACrB,MAEF,IAAK,KAAO,IAAD,EACTP,EAAO,UAACxN,EAAMyN,aAAP,aAAC,EAAaO,cACrB,MAEF,QAAU,IAAD,EACPR,EAAO,UAACxN,EAAMyN,aAAP,aAAC,EAAaM,mBArBvBP,OAAQG,GAmFkCM,CAAM,OAACvL,QAAD,IAACA,OAAD,EAACA,EAAOwL,aAApD,UACE,cAAC,KAAOpG,OAAR,CAAepF,MAAM,IAArB,uBACA,cAAC,KAAOoF,OAAR,CAAepF,MAAM,IAArB,4BACA,cAAC,KAAOoF,OAAR,CAAepF,MAAM,IAArB,oBACA,cAAC,KAAOoF,OAAR,CAAepF,MAAM,KAArB,gCACA,cAAC,KAAOoF,OAAR,CAAepF,MAAM,KAArB,qCACA,cAAC,KAAOoF,OAAR,CAAepF,MAAM,SAArB,wCAGA,cAAC,KAAOoF,OAAR,CAAepF,MAAM,OAArB,8BACA,cAAC,KAAOoF,OAAR,CAAepF,MAAM,QAArB,8BACA,cAAC,KAAOoF,OAAR,CAAepF,MAAM,gBAArB,6BAGJ,cAAC,IAAKR,KAAN,CACEE,MAAO,aACPf,KAAM,aACNgB,aAAW,EACX8L,QACE,yHAEF7L,MAAO,CACL,CACEH,SACe,kBAAbkL,IAEiB,UAAbA,GAEa,SAAbA,GAGNlM,QAAS,6BAEX,CACEiN,QACe,kBAAbf,EACIF,GACa,UAAbE,GAEa,SAAbA,EADAD,GAGA,KACNjM,QAAS,wBA5Bf,SA+BE,cAAC,IAAD,CAAOlC,KAAM,WAEf,cAAC,IAAKiD,KAAN,CACEb,KAAM,UACNe,MAAO,qBACPC,aAAW,EACXC,MAAO,CACL,CACEH,UAAU,EACVhB,QAAS,oCAEX,CACE8D,IAAK,EACL9D,QAAS,mCAXf,SAcE,cAAC,IAAD,CAAOlC,KAAM,aAEf,cAAC,IAAKiD,KAAN,UACE,cAAC,IAAD,CACEU,SAAUqF,EACVpF,SAAU,SACVC,KACE,cAACC,EAAA,EAAD,CACEC,QAASiF,EACThF,MAAM,EACNtB,MAAO,CACLuB,MAAO,UARf,SAYG1C,e,oBC0GEZ,GA5SGC,aALM,SAACd,GAAD,MAAuB,CAC7CN,SAAUM,EAAMD,QAAQL,SACxB6H,cAAevH,EAAMD,QAAQJ,gBAC7BF,MAAOO,EAAMD,QAAQN,SAEoB,GA4S5BoB,C,oDA5Rb,WAAYI,GAAe,IAAD,8BACxB,cAAMA,IAcRqO,qBAAuB,SAACrD,GAAD,MAAqB,CAC1CsD,eAAgB,gBACdC,EADc,EACdA,gBACAC,EAFc,EAEdA,aACAC,EAHc,EAGdA,QACAC,EAJc,EAIdA,aAJc,OAMd,sBAAK/M,MAAO,CAAC2K,QAAS,GAAtB,UACE,cAAC,IAAD,CACE5E,YAAW,iBAAYsD,GACvBtI,MAAO8L,EAAa,GACpBG,aAAc,kBACZ,EAAKC,aAAaJ,EAAcC,EAASzD,IAE3CzI,SAAU,SAAAC,GAAC,OACT+L,EAAgB/L,EAAEC,OAAOC,MAAQ,CAACF,EAAEC,OAAOC,OAAS,KAEtDf,MAAO,CAACE,MAAO,IAAKgN,aAAc,EAAG3D,QAAS,WAEhD,qBAAKvJ,MAAO,CACZE,MAAO,QACP0K,OAAQ,qBAFR,SAIiB,SAAdvB,EACC,cAAC,KAAD,CAAU8D,YAAY,EAAOpM,MAAO,EAAK3D,MAAM2D,MAC/CqM,SAAU,SAAAvM,GACR,IAAIwM,EAAKxM,EAAE0L,WACXK,EAAgB,IAAI3C,KAAKoD,GAAIlD,cAAcC,OAAO,EAAE,IAClD,CAAC,IAAIH,KAAKoD,GAAIlD,cAAcC,OAAO,EAAE,KACrC,IACF,EAAKgD,SAASvM,MAGhB,OAGJ,eAAC,KAAD,WACE,cAAC,IAAD,CACEvD,KAAK,UACLyH,QAAS,kBAAM,EAAKkI,aAAaJ,EAAcC,EAASzD,IACxDlI,KAAM,cAACmM,GAAA,EAAD,IACNxE,KAAK,QACL9I,MAAO,CAACE,MAAO,IALjB,oBAQA,cAAC,IAAD,CACE6E,QAAS,kBAAM,EAAKwI,YAAYR,IAChCjE,KAAK,QACL9I,MAAO,CAACE,MAAO,IAHjB,mBAMA,cAAC,IAAD,CACE5C,KAAK,OACLwL,KAAK,QACL/D,QAAS,WACP+H,EAAQ,CAACU,eAAe,IACxB,EAAKhG,SAAS,CACZiG,WAAYZ,EAAa,GACzBa,eAAgBrE,KAPtB,2BAeNsE,WAAY,SAACC,GAAD,OACV,cAACN,GAAA,EAAD,CAAgBtN,MAAO,CAACuB,MAAOqM,EAAW,eAAY5B,MAExD6B,SAAU,SAAC9M,EAAY+M,GAAb,OACRA,EAAOzE,GACHyE,EAAOzE,GACJkD,WACAwB,cACAC,SAASjN,EAAMgN,eAClB,IACNE,OAAQ,SAACC,GAAD,OACN,EAAK9Q,MAAMsQ,iBAAmBrE,EAC5B,cAAC,KAAD,CACE8E,eAAgB,CAAClO,gBAAiB,UAAW0K,QAAS,GACtDyD,YAAa,CAAC,EAAKhR,MAAMqQ,YACzBY,YAAU,EACVC,gBAAiBJ,EAAOA,EAAK3B,WAAa,KAG5C2B,KApGoB,EAwG1Bd,SAAW,SAACrM,GACV,IAAIwN,EAAO,IAAItE,KAAKlJ,GAAOoJ,cAAcC,OAAO,EAAE,IAClD,EAAK5C,SAAS,CACZzG,MAAOA,EACP0M,WAAYc,KA5GU,EAgH1BtB,aAAe,SAACJ,EAAmBC,EAAczD,GAC/CyD,IACA,EAAKtF,SAAS,CACZiG,WAAYZ,EAAa,GACzBa,eAAgBrE,KApHM,EAwH1BkE,YAAc,SAACR,GACbA,IACA,EAAKvF,SAAS,CAACiG,WAAY,MA1HH,EA6H1BrE,QAAkC,CAChC,CACEvK,MAAO,UACPwK,UAAW,QACX5L,IAAK,QACL+Q,SAAU,CACR,CACE3P,MAAO,OACPpB,IAAK,YACL+Q,SAAU,CAAC,aAEP3P,MAAO,SACPpB,IAAK,iBACL4L,UAAW,kBACR,EAAKqD,qBAAqB,mBAE/B,CACE7N,MAAO,QACPpB,IAAK,aACL4L,UAAW,cAEb,CACExK,MAAO,YACPpB,IAAK,cACL4L,UAAW,iBAIjB,CACExK,MAAO,YACPpB,IAAK,YACL+Q,SAAU,CAAC,aAEP3P,MAAO,SACPpB,IAAK,iBACL4L,UAAW,kBACR,EAAKqD,qBAAqB,mBAE/B,CACE7N,MAAO,QACPpB,IAAK,aACL4L,UAAW,cAEb,CACExK,MAAO,YACPpB,IAAK,cACL4L,UAAW,mBA9CW,yBAqD9BxK,MAAO,QACPpB,IAAK,OACL4L,UAAW,QACR,EAAKqD,qBAAqB,SAxDC,IAyD9B+B,OAAQ,SAACC,EAASC,GAAV,OACN,IAAI1E,KAAKyE,EAAQH,MAAMK,UAAY,IAAI3E,KAAK0E,EAAQJ,MAAMK,WAC5DC,eAAgB,CAAC,SAAU,aAE7B,CACEhQ,MAAO,SACPpB,IAAK,eACL4L,UAAW,eACXyF,QAAS,CACP,CAACZ,KAAM,WAAYnN,MAAO,YAC1B,CAACmN,KAAM,YAAanN,MAAO,aAC3B,CAACmN,KAAM,UAAWnN,MAAO,YAE3B8M,SAAU,SAAC9M,EAAO+M,GAAR,OAAmBA,EAAOiB,eAAiBhO,GACrD8N,eAAgB,CAAC,SAAU,WAC3BJ,OAAQ,SAACC,EAASC,GAAV,OACND,EAAQK,aAAapM,OAASgM,EAAQI,aAAapM,SAEvD,CACE9D,MAAO,UACPpB,IAAK,MACLwQ,OAAQ,SAAClN,EAAO+M,EAAQhJ,GAAhB,OACN,cAAC,KAAD,CACEC,QAAS,WACqB,cAAxB+I,EAAOiB,cACT,EAAKvH,SAAL,2BAAkB,EAAKpK,OAAvB,IAA8B4R,UAAU,EAAMlD,MAAOgC,MAGzD9N,MAAO,CAAC6I,OAAQ,WAChBtH,MAA+B,cAAxBuM,EAAOiB,aAA+B,OAAS,UAPxD,SAQ2B,cAAxBjB,EAAOiB,aACJ,UACA,yBApNV,EAAK3R,MAAQ,CACX6R,WAAY,KACZC,QAAS,GACT5I,SAAS,EACT0I,UAAU,EACVvB,WAAY,GACZC,eAAgB,GAChB3M,MAAOoO,MAAO,IAAIlF,MAAOmF,cAAc,MAAK,IAAInF,MAAOoF,WAAa,GAAG,KAAI,IAAIpF,MAAOqF,YAExF,EAAKC,UAAUlI,KAAf,gBACA,EAAKmI,WAAWnI,KAAhB,gBAZwB,E,8CA4N1B,SACE5J,EACAoD,GAEA0G,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEE6R,WAAYxR,EACZ6I,SAAS,KAEXiB,KAAKgI,c,8DAGP,6GAE2BpQ,IAAM2E,IAAN,uBACLyD,KAAKnK,MAAM6R,WADN,aAF3B,OAEU5P,EAFV,OAKIkI,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEE8R,QAAS7P,EAAS9B,KAAK2R,WAP7B,gDAUI1P,KAAQG,MAAM,gCAVlB,yBAYI4H,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEEkJ,SAAS,KAdf,4E,qFAmBA,WACEiB,KAAKgI,c,oBAGP,WAAU,IAAD,OACP,OACE,gCACE,cAAC,EAAD,CAAQ5K,cAAe4C,KAAKlJ,MAAMsG,cAAe9F,MAAO,wBACxD,eAAC,KAAD,CACE4Q,iBAAkB,KAClBC,UAAQ,EACRC,UAAQ,EACRC,WAAYrI,KAAKiI,WAAWnI,KAAKE,MAJnC,UAKE,cAAC,KAAKsI,QAAN,CAAcC,IAAK,oBAAyB,MAC5C,cAAC,KAAKD,QAAN,CAAcC,IAAK,oBAAyB,MAC5C,cAAC,KAAKD,QAAN,CAAcC,IAAK,gBAAqB,SAE1C,cAAC,KAAD,CACExJ,QAASiB,KAAKnK,MAAMkJ,QACpBkC,UAAQ,EACRO,WAAYxB,KAAKnK,MAAM8R,QACvB9F,QAAS7B,KAAK6B,UAEhB,cAAC,GAAD,CACEvJ,QAAS0H,KAAKnK,MAAM4R,SACpBlD,MAAOvE,KAAKnK,MAAM0O,MAClB/L,SAAU,kBAAM,EAAKyH,SAAL,2BAAkB,EAAKpK,OAAvB,IAA8B4R,UAAU,e,GAtR5CjE,IAAMC,YCwPb/M,GA1QGC,aALM,SAACd,GAAD,MAAuB,CAC7CN,SAAUM,EAAMD,QAAQL,SACxB6H,cAAevH,EAAMD,QAAQJ,gBAC7BF,MAAOO,EAAMD,QAAQN,SAEoB,GA0Q5BoB,C,oDA5Pb,WAAYI,GAAe,IAAD,8BACxB,cAAMA,IAqDRqO,qBAAuB,SAACrD,GAAD,MAAqB,CAC1CsD,eAAgB,gBACdC,EADc,EACdA,gBACAC,EAFc,EAEdA,aACAC,EAHc,EAGdA,QACAC,EAJc,EAIdA,aAJc,OAMd,sBAAK/M,MAAO,CAAC2K,QAAS,GAAtB,UACE,cAAC,IAAD,CACE5E,YAAW,iBAAYsD,GACvBtI,MAAO8L,EAAa,GACpBjM,SAAU,SAAAC,GAAC,OACT+L,EAAgB/L,EAAEC,OAAOC,MAAQ,CAACF,EAAEC,OAAOC,OAAS,KAEtDiM,aAAc,kBACZ,EAAKC,aAAaJ,EAAcC,EAASzD,IAE3CrJ,MAAO,CAACE,MAAO,IAAKgN,aAAc,EAAG3D,QAAS,WAEhD,eAAC,KAAD,WACE,cAAC,IAAD,CACEjM,KAAK,UACLyH,QAAS,kBAAM,EAAKkI,aAAaJ,EAAcC,EAASzD,IACxDlI,KAAM,cAACmM,GAAA,EAAD,IACNxE,KAAK,QACL9I,MAAO,CAACE,MAAO,IALjB,oBAQA,cAAC,IAAD,CACE6E,QAAS,kBAAM,EAAKwI,YAAYR,IAChCjE,KAAK,QACL9I,MAAO,CAACE,MAAO,IAHjB,mBAMA,cAAC,IAAD,CACE5C,KAAK,OACLwL,KAAK,QACL/D,QAAS,WACP+H,EAAQ,CAACU,eAAe,IACxB,EAAKhG,SAAS,CACZiG,WAAYZ,EAAa,GACzBa,eAAgBrE,KAPtB,2BAeNsE,WAAY,SAACC,GAAD,OACV,cAACN,GAAA,EAAD,CAAgBtN,MAAO,CAACuB,MAAOqM,EAAW,eAAY5B,MAExD6B,SAAU,SAAC9M,EAAY+M,GAAb,OACRA,EAAOzE,GACHyE,EAAOzE,GACJkD,WACAwB,cACAC,SAASjN,EAAMgN,eAClB,IACNE,OAAQ,SAACC,GAAD,OACN,EAAK9Q,MAAMsQ,iBAAmBrE,EAC5B,cAAC,KAAD,CACE8E,eAAgB,CAAClO,gBAAiB,UAAW0K,QAAS,GACtDyD,YAAa,CAAC,EAAKhR,MAAMqQ,YACzBY,YAAU,EACVC,gBAAiBJ,EAAOA,EAAK3B,WAAa,KAG5C2B,KA1HoB,EA8H1BjB,aAAe,SAACJ,EAAmBC,EAAczD,GAC/CyD,IACA,EAAKtF,SAAS,CACZiG,WAAYZ,EAAa,GACzBa,eAAgBrE,KAlIM,EAsI1BkE,YAAc,SAACR,GACbA,IACA,EAAKvF,SAAS,CAACiG,WAAY,MArI3B,EAAKrQ,MAAQ,CACX2S,IAAK,GACLC,QAAS,GACT1J,SAAS,EACT2J,UAAU,EACVxC,WAAY,GACZC,eAAgB,IAElB,EAAKtG,QAAQC,KAAb,gBACA,EAAKmI,WAAWnI,KAAhB,gBAZwB,E,kFAe1B,WAAsB6I,GAAtB,yFAEI3I,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEEkJ,SAAS,EACT2J,UAAU,KALhB,SAO2B9Q,IAAM2E,IAAI,mBAAqBoM,EAAQ,CAC5DnM,QAAS,CAACC,cAAeuD,KAAKlJ,MAAMxB,SAR1C,cAOUwC,EAPV,OAUIkI,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEE2S,IAAK1Q,EAAS9B,KACd+I,SAAS,KAbf,SAe+BnH,IAAM2E,IAAI,mBAAqBoM,EAAQ,CAChEnM,QAAS,CAACC,cAAeuD,KAAKlJ,MAAMxB,SAhB1C,OAeUsT,EAfV,OAkBI5I,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEE4S,QAASG,EAAa5S,KACtB0S,UAAU,KArBhB,kDAwBIzQ,KAAQG,MAAM,oCAxBlB,0D,sFA4BA,WACE4H,KAAKH,QAAQ,S,wBAGf,SACE3J,EACAoD,GAEA0G,KAAKH,QAAQ3J,K,oBAwFf,WACE,IAAM2L,EAAU,CACd,CACEvK,MAAO,MACPwK,UAAW,MACX5L,IAAK,OAJO,aAOZoB,MAAO,SACPwK,UAAW,OACX5L,IAAK,QACF8J,KAAKmF,qBAAqB,SAVjB,yBAaZ7N,MAAO,UACPwK,UAAW,SACX5L,IAAK,UACF8J,KAAKmF,qBAAqB,WAhBjB,IAiBZuB,OAAQ,SAACvO,GAAD,OACN,mBACE0Q,KAAI,0CAAqC1Q,EAArC,WACJoB,OAAO,SACPuP,IAAI,aAHN,SAIG3Q,OAIP,CACEb,MAAO,QACPwK,UAAW,eACX5L,IAAK,iBAIH6S,EAAkB,CACtB,CACEzR,MAAO,MACPwK,UAAW,MACX5L,IAAK,OAJe,yBAOpBoB,MAAO,SACPwK,UAAW,YACX5L,IAAK,aACF8J,KAAKmF,qBAAqB,cAVT,IAWpBuB,OAAQ,SAACvO,GAAD,OACN,mBACE0Q,KAAI,0CAAqC1Q,EAArC,WACJoB,OAAO,SACPuP,IAAI,aAHN,SAIG3Q,OAIP,CACEb,MAAO,UACPwK,UAAW,gBACX5L,IAAK,iBAEP,CACEoB,MAAO,iBACPwK,UAAW,cACX5L,IAAK,eAEP,CACEoB,MAAO,qBACPwK,UAAW,eACX5L,IAAK,gBAEP,CACEoB,MAAO,oBACPwK,UAAW,cACX5L,IAAK,eAEP,CACEoB,MAAO,mBACPwK,UAAW,aACX5L,IAAK,eAIT,OACE,gCACE,cAAC,EAAD,CAAekH,cAAe4C,KAAKlJ,MAAMsG,cAAe9F,MAAO,iBAC/D,eAAC,KAAD,CACE4Q,iBAAkB,MAClBC,UAAQ,EACRC,UAAQ,EACRC,WAAYrI,KAAKiI,WAAWnI,KAAKE,MAJnC,UAKE,cAAC,KAAKsI,QAAN,CAAcC,IAAK,oBAAyB,OAC5C,cAAC,KAAKD,QAAN,CAAcC,IAAK,oBAAyB,KAC5C,cAAC,KAAKD,QAAN,CAAcC,IAAK,gBAAqB,UAE1C,oDACA,cAAC,KAAD,CACE/G,WAAYxB,KAAKnK,MAAM2S,IACvB3G,QAASA,EACTN,KAAK,QACLxC,QAASiB,KAAKnK,MAAMkJ,UAGtB,oBAAItG,MAAO,CAACuQ,UAAW,IAAvB,8BACA,cAAC,KAAD,CACExH,WAAYxB,KAAKnK,MAAM4S,QACvB5G,QAASkH,EACTxH,KAAK,QACLxC,QAASiB,KAAKnK,MAAM6S,kB,GAtPVlF,IAAMC,YCiEX/M,GAhFGC,aALM,SAACd,GAAD,MAAuB,CAC7CN,SAAUM,EAAMD,QAAQL,SACxB6H,cAAevH,EAAMD,QAAQJ,gBAC7BF,MAAOO,EAAMD,QAAQN,SAEoB,GAgF5BoB,C,oDAtEb,WAAYI,GAAe,IAAD,8BACxB,cAAMA,IA+BA8K,UAAY,SAACrB,EAAoBhD,GAArB,OAClB,eAAC,KAAKvE,KAAN,WACE,cAAC,KAAKA,KAAK2F,KAAX,CACErH,MAAK,UAAKiJ,EAAK0I,UAAV,eAA0B1I,EAAK2I,WACpCjO,YAAasF,EAAKkC,kBACpB,cAAC,KAAKzJ,KAAK2F,KAAX,CACErH,MAAK,eAAUiJ,EAAK4D,UACpBlJ,YAAasF,EAAKI,SACpB,mBACElI,MAAO,CACLuB,MAAuB,WAAhBuG,EAAKI,OAAsB,QAAU,OAFhD,mBAIMJ,EAAKtI,QAAQkR,UAAU,EAAG,GAJhC,aAIuC5I,EAAKtI,QAAQkR,UAChD,EACA5I,EAAKtI,QAAQmD,aAbHmC,IA/BhB,EAAK1H,MAAQ,CACXkJ,SAAS,EACTqK,cAAe,IAEjB,EAAKC,iBAAiBvJ,KAAtB,gBANwB,E,2FAS1B,6GAE2BlI,IAAM2E,IAAI,sBAAuB,CACtDC,QAAS,CAACC,cAAeuD,KAAKlJ,MAAMxB,SAH1C,OAEUwC,EAFV,OAKIkI,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEEuT,cAAetR,EAAS9B,KAAKoT,iBAPnC,gDAUInR,KAAQG,MAAM,sCAVlB,yBAYI4H,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEEkJ,SAAS,KAdf,4E,qFAmBA,WACEiB,KAAKqJ,qB,oBAuBP,WACE,OACE,gCACE,cAAC,EAAD,CACEjM,cAAe4C,KAAKlJ,MAAMsG,cAC1B9F,MAAO,mBAET,cAAC,KAAD,CACEyH,QAASiB,KAAKnK,MAAMkJ,QACpBkC,UAAQ,EACRO,WAAYxB,KAAKnK,MAAMuT,cACvBzH,WAAY3B,KAAK4B,mB,GAhEL4B,IAAMC,YC4Sb/M,GAjTGC,aALM,SAACd,GAAD,MAAuB,CAC7CN,SAAUM,EAAMD,QAAQL,SACxB6H,cAAevH,EAAMD,QAAQJ,gBAC7BF,MAAOO,EAAMD,QAAQN,SAEoB,GAiT5BoB,C,oDAlSb,WAAYI,GAAe,IAAD,8BACxB,cAAMA,IAyDRqO,qBAAuB,SAACrD,GAAD,MAAqB,CAC1CsD,eAAgB,gBACdC,EADc,EACdA,gBACAC,EAFc,EAEdA,aACAC,EAHc,EAGdA,QACAC,EAJc,EAIdA,aAJc,OAMd,sBAAK/M,MAAO,CAAC2K,QAAS,GAAtB,UACE,cAAC,IAAD,CACE5E,YAAW,iBAAYsD,GACvBtI,MAAO8L,EAAa,GACpBG,aAAc,kBACZ,EAAKC,aAAaJ,EAAcC,EAASzD,IAE3CzI,SAAU,SAAAC,GAAC,OACT+L,EAAgB/L,EAAEC,OAAOC,MAAQ,CAACF,EAAEC,OAAOC,OAAS,KAEtDf,MAAO,CAACE,MAAO,IAAKgN,aAAc,EAAG3D,QAAS,WAEhD,qBAAKvJ,MAAO,CACZE,MAAO,QACP0K,OAAQ,qBAFR,SAIiB,SAAdvB,EACC,cAAC,KAAD,CAAU8D,YAAY,EAAOpM,MAAO,EAAK3D,MAAM2D,MAC/CqM,SAAU,SAAAvM,GACR,IAAIwM,EAAKxM,EAAE0L,WACXK,EAAgB,IAAI3C,KAAKoD,GAAIlD,cAAcC,OAAO,EAAE,IAClD,CAAC,IAAIH,KAAKoD,GAAIlD,cAAcC,OAAO,EAAE,KACrC,IACF,EAAKgD,SAASvM,MAEd,OAGN,eAAC,KAAD,WACE,cAAC,IAAD,CACEvD,KAAK,UACLyH,QAAS,kBAAM,EAAKkI,aAAaJ,EAAcC,EAASzD,IACxDlI,KAAM,cAACmM,GAAA,EAAD,IACNxE,KAAK,QACL9I,MAAO,CAACE,MAAO,IALjB,oBAQA,cAAC,IAAD,CACE6E,QAAS,kBAAM,EAAKwI,YAAYR,IAChCjE,KAAK,QACL9I,MAAO,CAACE,MAAO,IAHjB,mBAMA,cAAC,IAAD,CACE5C,KAAK,OACLwL,KAAK,QACL/D,QAAS,WACP+H,EAAQ,CAACU,eAAe,IACxB,EAAKhG,SAAS,CACZiG,WAAYZ,EAAa,GACzBa,eAAgBrE,KAPtB,2BAeNsE,WAAY,SAACC,GAAD,OACV,cAACN,GAAA,EAAD,CAAgBtN,MAAO,CAACuB,MAAOqM,EAAW,eAAY5B,MAExD6B,SAAU,SAAC9M,EAAY+M,GAAb,OACRA,EAAOzE,GACHyE,EAAOzE,GACJkD,WACAwB,cACAC,SAASjN,EAAMgN,eAClB,IACNE,OAAQ,SAACC,GAAD,OACN,EAAK9Q,MAAMsQ,iBAAmBrE,EAC5B,cAAC,KAAD,CACE8E,eAAgB,CAAClO,gBAAiB,UAAW0K,QAAS,GACtDyD,YAAa,CAAC,EAAKhR,MAAMqQ,YACzBY,YAAU,EACVC,gBAAiBJ,EAAOA,EAAK3B,WAAa,KAG5C2B,KA9IoB,EAkJ1Bd,SAAW,SAACrM,GACV,IAAIwN,EAAO,IAAItE,KAAKlJ,GAAOoJ,cAAcC,OAAO,EAAE,IAClD,EAAK5C,SAAS,CACZzG,MAAOA,EACP0M,WAAYc,KAtJU,EA0J1BtB,aAAe,SAACJ,EAAmBC,EAAczD,GAC/CyD,IACA,EAAKtF,SAAS,CACZiG,WAAYZ,EAAa,GACzBa,eAAgBrE,KA9JM,EAkK1BkE,YAAc,SAACR,GACbA,IACA,EAAKvF,SAAS,CAACiG,WAAY,MAjK3B,EAAKrQ,MAAQ,CACXmL,WAAY,GACZsI,kBAAmB,GACnBvK,SAAS,EACT2J,UAAU,EACVxC,WAAY,GACZC,eAAgB,GAChB3M,MAAOoO,MAAO,IAAIlF,MAAOmF,cAAc,MAAK,IAAInF,MAAOoF,WAAa,GAAG,KAAI,IAAIpF,MAAOqF,YAExF,EAAKlI,QAAQC,KAAb,gBACA,EAAKmI,WAAWnI,KAAhB,gBAbwB,E,kFAgB1B,WAAsB6I,GAAtB,yFAEI3I,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEEkJ,SAAS,EACT2J,UAAU,KALhB,SAO2B9Q,IAAM2E,IAAI,2BAA6BoM,EAAQ,CACpEnM,QAAS,CAACC,cAAeuD,KAAKlJ,MAAMxB,SAR1C,cAOUwC,EAPV,OAUIkI,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEEmL,WAAYlJ,EAAS9B,KACrB+I,SAAS,KAbf,SAeiCnH,IAAM2E,IACjC,kCAAoCoM,EACpC,CACEnM,QAAS,CAACC,cAAeuD,KAAKlJ,MAAMxB,SAlB5C,OAeUiU,EAfV,OAqBIvJ,KAAKC,SAAL,2BACKD,KAAKnK,OADV,IAEEyT,kBAAmBC,EAAevT,KAClC0S,UAAU,KAxBhB,kDA2BIzQ,KAAQG,MAAM,oCA3BlB,0D,sFA+BA,WACE4H,KAAKH,QAAQ,S,wBAGf,SACE3J,EACAoD,GAEA0G,KAAKH,QAAQ3J,K,oBAgHf,WACE,IAAM2L,EAAU,CAAC,aAEbvK,MAAO,SACPwK,UAAW,YACX5L,IAAK,aACF8J,KAAKmF,qBAAqB,cAE/B,CACE7N,MAAO,2BACPwK,UAAW,WACX5L,IAAK,YAEP,CACEoB,MAAO,0BACPwK,UAAW,UACX5L,IAAK,WAEP,CACEoB,MAAO,0BACPwK,UAAW,SACX5L,IAAK,WAIHsT,EAAiD,CAAC,aAEpDlS,MAAO,WACPwK,UAAW,QACX5L,IAAK,SACF8J,KAAKmF,qBAAqB,UAE/B,CACE7N,MAAO,eACPwK,UAAW,QACX5L,IAAK,SAEP,CACEoB,MAAO,gBACPwK,UAAW,aACX5L,IAAK,cAEP,CACEoB,MAAO,UACPwK,UAAW,UACX5L,IAAK,WAEP,CACEoB,MAAO,gBACPwK,UAAW,aACX5L,IAAK,cAEP,CACEoB,MAAO,WACPwK,UAAW,QACX5L,IAAK,SAEP,CACEoB,MAAO,eACPwK,UAAW,QACX5L,IAAK,SAEP,CACEoB,MAAO,YACPwK,UAAW,YACX5L,IAAK,aAEP,CACEoB,MAAO,SACPwK,UAAW,eACX5L,IAAK,eACLqR,QAAS,CACP,CAACZ,KAAM,WAAYnN,MAAO,YAC1B,CAACmN,KAAM,YAAanN,MAAO,cAE7B8M,SAAU,SAAC9M,EAAO+M,GAAR,OAAmBA,EAAOiB,eAAiBhO,GACrD8N,eAAgB,CAAC,SAAU,WAC3BJ,OAAQ,SAACC,EAASC,GAAV,OACND,EAAQK,aAAapM,OAASgM,EAAQI,aAAapM,SArDF,aAwDnD9D,MAAO,QACPwK,UAAW,OACX5L,IAAK,QACF8J,KAAKmF,qBAAqB,UAIjC,OACE,gCACE,cAAC,EAAD,CACE/H,cAAe4C,KAAKlJ,MAAMsG,cAC1B9F,MAAO,iBAET,eAAC,KAAD,CACE4Q,iBAAkB,MAClBC,UAAQ,EACRC,UAAQ,EACRC,WAAYrI,KAAKiI,WAAWnI,KAAKE,MAJnC,UAKE,cAAC,KAAKsI,QAAN,CAAcC,IAAK,oBAAyB,OAC5C,cAAC,KAAKD,QAAN,CAAcC,IAAK,oBAAyB,KAC5C,cAAC,KAAKD,QAAN,CAAcC,IAAK,gBAAqB,UAE1C,2DACA,cAAC,KAAD,CACE/G,WAAYxB,KAAKnK,MAAMmL,WACvBa,QAASA,EACTN,KAAK,QACLxC,QAASiB,KAAKnK,MAAMkJ,UAGtB,oBAAItG,MAAO,CAACuQ,UAAW,IAAvB,yCACA,cAAC,KAAD,CACExH,WAAYxB,KAAKnK,MAAMyT,kBACvBzH,QAAS2H,EACTjI,KAAK,QACLxC,QAASiB,KAAKnK,MAAM6S,kB,GA5RJlF,IAAMC,YCjBhC7L,IAAM6R,SAASC,QAAU,wBAiCVC,OA/Bf,WACE,OACE,cAAC,IAAD,CAAUrT,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAayI,QAAS,KAAMvI,UAAWA,EAAvC,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoT,OAAK,EAACC,KAAM,IAAnB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,WAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,WAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,gBAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,gBAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,iBAAnB,SACE,cAAC,GAAD,gBCzBCC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAAS7D,OACP,cAAC,IAAM8D,WAAP,UACE,cAAC,GAAD,MAEFtI,SAASuI,eAAe,SAM1BX,O","file":"static/js/main.f64308d3.chunk.js","sourcesContent":["export const SAVE_SESSION_DATA = 'SAVE_SESSION_DATA';\nexport const CLEAR_SESSION_DATA = 'CLEAR_SESSION_DATA';\nexport const SET_USER_BALANCE = 'SET_USER_BALANCE';\n\nexport interface Session {\n  username: string;\n  token: string;\n  isSessionActive: boolean;\n  balance: number;\n}\n\ninterface SaveSessionAction {\n  type: typeof SAVE_SESSION_DATA;\n  data: Session;\n}\n\ninterface ClearSessionAction {\n  type: typeof CLEAR_SESSION_DATA;\n}\n\ninterface SetBalanceAction {\n  type: typeof SET_USER_BALANCE;\n  balance: number;\n}\n\nexport type SessionActionTypes =\n  | SaveSessionAction\n  | ClearSessionAction\n  | SetBalanceAction;","import {\n  SAVE_SESSION_DATA,\n  CLEAR_SESSION_DATA,\n  SessionActionTypes,\n  Session,\n} from './session.types';\n\nconst initialState: Session = {\n  token: '',\n  username: '',\n  isSessionActive: false,\n  balance: 0,\n};\n\nexport function sessionReducer(\n  state = initialState,\n  action: SessionActionTypes\n): Session {\n  switch (action.type) {\n    case SAVE_SESSION_DATA:\n      return {\n        balance: action.data.balance,\n        isSessionActive: action.data.isSessionActive,\n        token: action.data.token,\n        username: action.data.username,\n      };\n    case CLEAR_SESSION_DATA:\n      return {\n        balance: initialState.balance,\n        isSessionActive: false,\n        token: initialState.token,\n        username: initialState.username,\n      };\n    case 'SET_USER_BALANCE':\n      return {\n        ...state,\n        balance: action.balance,\n      };\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport {sessionReducer} from './session/session.reducer';\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import {createStore} from 'redux';\nimport {persistReducer, persistStore} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport rootReducer, {RootState} from './reducer.root';\n\nconst persistConfing = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer<RootState, any>(\n  persistConfing,\n  rootReducer\n);\n\nconst store = createStore(persistedReducer);\n\nlet persistor = persistStore(store);\n\nexport {store, persistor};\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport {Card, Input, Form, Button, Modal, notification} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {connect, ConnectedProps} from 'react-redux';\n\nimport type {Session} from '../state-store/session/session.types';\n\nconst mapDispatchToProps = {\n  reduxSession: (userData: Session) => ({\n    type: 'SAVE_SESSION_DATA',\n    data: userData,\n  }),\n};\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux & {\n  visible: boolean;\n  onClose: () => void;\n};\n\nfunction LoginPage(props: Props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [title, setTitle] = useState('Iniciar sesion');\n  const [number, setNumber] = useState(0);\n\n  const doLogin = async () => {\n    setSaving(true);\n    setTitle('Verificando...');\n    try {\n      let response = await axios.post('/users/login', {\n        email: email,\n        password: password,\n      });\n      notification.success({\n        message: 'Inicio de sesion exitoso!',\n        placement: 'topRight',\n      });\n      props.reduxSession({\n        isSessionActive: true,\n        token: response.data.token,\n        username: response.data.name,\n        balance: response.data.balance,\n      });\n    } catch (err) {\n      notification.error({\n        message: err.response.data.message,\n        placement: 'topRight',\n      });\n    } finally {\n      setSaving(false);\n      setTitle('Iniciar sesion');\n      props.onClose();\n    }\n  };\n  const showFailedNotification = () => {\n    if (number === 5) {\n      setNumber(0);\n      notification.error({\n        message: \"Coño e' tu madre, rellena el formulario!\",\n        placement: 'topRight',\n      });\n    } else {\n      setNumber(number + 1);\n    }\n  };\n\n  return (\n    <Modal visible={props.visible} footer={null} onCancel={props.onClose}>\n      <Card\n        title={'Inicia sesion'}\n        style={{\n          backgroundColor: '#dbd8e3',\n          width: '100%',\n        }}\n        hoverable>\n        <Form\n          layout={'vertical'}\n          onFinish={doLogin}\n          onFinishFailed={showFailedNotification}>\n          <Form.Item\n            required={true}\n            label={'Correo'}\n            name={'Correo'}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Introduce un correo!',\n              },\n              {\n                type: 'email',\n                message: 'Direccion de correo no valida!',\n              },\n            ]}>\n            <Input onChange={e => setEmail(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            required={true}\n            label={'Contraseña'}\n            name={'Contraseña'}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Introduce una contraseña!',\n              },\n            ]}>\n            <Input.Password\n              type={'password'}\n              onChange={e => setPassword(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              disabled={saving}\n              htmlType={'submit'}\n              icon={\n                <LoadingOutlined\n                  hidden={!saving}\n                  spin={true}\n                  style={{\n                    color: 'lime',\n                  }}\n                />\n              }>\n              {title}\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    </Modal>\n  );\n}\n\nexport default connector(LoginPage);\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport {Card, Input, Form, Button, Modal, notification} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport {PhoneNumberUtil} from 'google-libphonenumber';\n\nconst phoneValidator = new PhoneNumberUtil();\ntype Props = {\n  visible: boolean;\n  onClose: () => void;\n};\n\nconst RegisterPage = (props: Props) => {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState<string | undefined>();\n  const [phone, setPhone] = useState<string | undefined>();\n  const [lastName, setLastName] = useState<string | undefined>();\n  const [id, setId] = useState<string | undefined>();\n  const [title, setTitle] = useState('Registrarse');\n\n  const doRegister = async () => {\n    setSaving(true);\n    setTitle('Creando...');\n    try {\n      let form = new FormData();\n      form.append('name', name);\n      form.append('email', email);\n      form.append('password', password);\n      if (phone) {\n        form.append('phone', phone);\n      }\n      if (lastName) {\n        form.append('last_name', lastName);\n      }\n      if (address) {\n        form.append('address', address);\n      }\n      if (id) {\n        form.append('document', id);\n      }\n      await axios.post('/users/user', form);\n      notification.success({\n        message: 'Cuenta creada exitosamente!',\n        placement: 'topRight',\n      });\n      props.onClose();\n    } catch (err) {\n      notification.error({\n        message: 'Error creando la cuenta.',\n        description: 'Es posible que el Email ya este registrado.',\n        placement: 'topRight',\n      });\n    } finally {\n      setSaving(false);\n      setTitle('Registrarse');\n    }\n  };\n\n  return (\n    <Modal visible={props.visible} footer={null} onCancel={props.onClose}>\n      <Card\n        title={'Crea una cuenta'}\n        style={{\n          backgroundColor: '#dbd8e3',\n          width: '100%',\n        }}\n        hoverable>\n        <Form layout={'vertical'} onFinish={doRegister}>\n          <Form.Item\n            required={true}\n            label={'Nombre'}\n            name={'Nombre'}\n            rules={[\n              {\n                required: true,\n                message: 'Introduce un nombre!',\n              },\n            ]}>\n            <Input onChange={e => setName(e.target.value)} />\n          </Form.Item>\n          <Form.Item label={'Apellido'} name={'Apellido'}>\n            <Input onChange={e => setLastName(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            required={true}\n            label={'Correo'}\n            name={'Correo'}\n            hasFeedback\n            rules={[\n              {\n                type: 'email',\n                message: 'Direccion de correo no valida!',\n              },\n              {\n                required: true,\n                message: 'Introduce una direccion de correo!',\n              },\n            ]}>\n            <Input onChange={e => setEmail(e.target.value)} />\n          </Form.Item>\n          <Form.Item label={'Direccion'} name={'Direccion'}>\n            <Input onChange={e => setAddress(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            label={'Numero de telefono'}\n            name={'Numero de telefono'}\n            hasFeedback\n            rules={[\n              {\n                validator: (_, value) => {\n                  if (value.length === 0) {\n                    return Promise.resolve();\n                  }\n                  if (Number.isNaN(Number.parseInt(value))) {\n                    return Promise.reject('Solo numeros!');\n                  } else {\n                    try {\n                      phoneValidator.isValidNumber(phoneValidator.parse(value));\n                      return Promise.resolve();\n                    } catch (err) {\n                      return Promise.reject('Numero de telefono invalido!');\n                    }\n                  }\n                },\n              },\n            ]}>\n            <Input onChange={e => setPhone(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            label={'DNI'}\n            name={'DNI'}\n            hasFeedback\n            rules={[\n              {\n                validator: (_, value) => {\n                  if (value.length === 0) {\n                    return Promise.resolve();\n                  }\n                  if (Number.isNaN(Number.parseInt(value, 10))) {\n                    return Promise.reject(new Error('Solo numeros!'));\n                  }\n                  if (value.length < 8) {\n                    return Promise.reject(new Error('DNI invalido!'));\n                  }\n                  return Promise.resolve();\n                },\n              },\n            ]}>\n            <Input onChange={e => setId(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            required={true}\n            label={'Contraseña'}\n            name={'Contraseña'}\n            rules={[\n              {\n                required: true,\n                message: 'Introduce una contraseña!',\n              },\n              {\n                min: 3,\n                max: 30,\n                message: 'Longitud debe estar entre 3 y 30 caracteres!',\n              },\n            ]}\n            hasFeedback>\n            <Input.Password onChange={e => setPassword(e.target.value)} />\n          </Form.Item>\n          <Form.Item\n            required={true}\n            label={'Confirma la contraseña'}\n            name={'Confirmacion'}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: 'Confirma la contraseña!',\n              },\n              {\n                min: 3,\n                max: 30,\n                message: 'Longitud debe estar entre 3 y 30 caracteres!',\n              },\n              ({getFieldValue}) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('Contraseña') === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\n                    new Error('Las contraseñas no son iguales!')\n                  );\n                },\n              }),\n            ]}>\n            <Input.Password />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              disabled={saving}\n              htmlType={'submit'}\n              icon={\n                <LoadingOutlined\n                  hidden={!saving}\n                  spin={true}\n                  style={{\n                    color: 'lime',\n                  }}\n                />\n              }>\n              {title}\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    </Modal>\n  );\n};\n\nexport default RegisterPage;\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {Drawer, Typography, Menu, notification} from 'antd';\nimport {connect, ConnectedProps} from 'react-redux';\nimport axios from 'axios';\n\nimport type {RootState} from '../state-store/reducer.root';\n\ntype menuOptions = {\n  name: string;\n  action: () => void;\n  type: string;\n};\n\nconst mapDispatchToProps = {\n  reduxClearState: () => ({type: 'CLEAR_SESSION_DATA'}),\n};\nconst mapStateToProps = (state: RootState) => ({\n  token: state.session.token,\n});\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux & {\n  menuVisible: boolean;\n  setMenuVisible: () => void;\n  setLoginVisible: () => void;\n  setRegisterVisible: () => void;\n  sessionActive: boolean;\n};\n\nconst NavigationDrawer = (props: Props) => {\n  const history = useHistory();\n\n  const logout = async () => {\n    notification.info({\n      placement: 'topLeft',\n      message: 'Cerrando sesion...',\n    });\n    try {\n      await axios.get('/users/logout', {\n        headers: {\n          authorization: props.token,\n        },\n      });\n      props.reduxClearState();\n      notification.success({\n        message: 'Sesion terminada.',\n        placement: 'topRight',\n      });\n      history.push('/');\n    } catch (err) {\n      notification.error({\n        message: 'Error cerrando sesion.',\n        description: 'Intente de nuevo mas tarde.',\n        placement: 'topRight',\n      });\n      console.error(err);\n    }\n  };\n\n  const menuOptions: menuOptions[] = [\n    {\n      name: 'Pagina principal',\n      action: () => history.push('/'),\n      type: 'global',\n    },\n    {\n      name: 'Estadisticas',\n      action: () => history.push('/estadisticas'),\n      type: 'session',\n    },\n    {\n      name: 'Predicciones',\n      action: () => history.push('/predicciones'),\n      type: 'session',\n    },\n    {\n      name: 'Partidos y Apuestas',\n      action: () => history.push('/matches'),\n      type: 'session',\n    },\n    {\n      name: 'Notificaciones',\n      action: () => history.push('/notifications'),\n      type: 'session',\n    },\n    {\n      name: 'Iniciar sesion',\n      action: props.setLoginVisible,\n      type: 'visit',\n    },\n    {\n      name: 'Registrarse',\n      action: props.setRegisterVisible,\n      type: 'visit',\n    },\n    {\n      name: 'Perfil',\n      action: () => history.push('/profile'),\n      type: 'session',\n    },\n    {\n      name: 'Cerrar sesion',\n      action: () => logout(),\n      type: 'session',\n    },\n  ];\n\n  return (\n    <Drawer\n      placement={'right'}\n      closable={false}\n      visible={props.menuVisible}\n      onClose={props.setMenuVisible}>\n      <Menu defaultSelectedKeys={['0']}>\n        <Typography.Title>Menu</Typography.Title>\n        {props.sessionActive\n          ? menuOptions.map((option, index) => {\n              if (option.type !== 'visit')\n                return (\n                  <Menu.Item key={index} onClick={option.action}>\n                    {option.name}\n                  </Menu.Item>\n                );\n              else return null;\n            })\n          : menuOptions.map((option, index) => {\n              if (option.type !== 'session')\n                return (\n                  <Menu.Item key={index} onClick={option.action}>\n                    {option.name}\n                  </Menu.Item>\n                );\n              else return null;\n            })}\n      </Menu>\n    </Drawer>\n  );\n};\n\nexport default connector(NavigationDrawer);\n","import React, {useState} from 'react';\nimport {PageHeader} from 'antd';\nimport {MenuOutlined} from '@ant-design/icons';\nimport Login from './login';\nimport Register from './register';\nimport NavDrawer from './navigationDrawer';\n\ntype Props = {\n  sessionActive: boolean;\n  title: string;\n};\n\nfunction MenuComponent(props: Props) {\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [loginVisible, setLoginVisible] = useState(false);\n  const [registerVisible, setRegisterVisible] = useState(false);\n\n  return (\n    <div>\n      <PageHeader\n        title={'FAP'}\n        subTitle={props.title}\n        ghost={false}\n        style={{\n          backgroundColor: '#dbd8e3',\n        }}\n        extra={[\n          <MenuOutlined\n            key={'menuIcon'}\n            onClick={() => setMenuVisible(!menuVisible)}\n          />,\n        ]}></PageHeader>\n      <Login\n        visible={loginVisible}\n        onClose={() => setLoginVisible(!loginVisible)}\n      />\n      <Register\n        visible={registerVisible}\n        onClose={() => setRegisterVisible(!registerVisible)}\n      />\n      <NavDrawer\n        menuVisible={menuVisible}\n        setLoginVisible={() => setLoginVisible(!loginVisible)}\n        sessionActive={props.sessionActive}\n        setMenuVisible={() => setMenuVisible(!menuVisible)}\n        setRegisterVisible={() => setRegisterVisible(!registerVisible)}\n      />\n    </div>\n  );\n}\n\nexport default MenuComponent;\n","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport MenuComponent from '../components/pageHeader';\nimport {Card, Carousel, Image} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\n\nimport type {RootState} from '../state-store/reducer.root';\nimport type {Session} from '../state-store/session/session.types';\n\nconst mapStateToProps = (state: RootState) => ({\n  username: state.session.username,\n  sessionActive: state.session.isSessionActive,\n});\nconst mapDispatchToProps = {\n  setData: (data: Session) => ({\n    type: 'SAVE_SESSION_DATA',\n    data: data,\n  }),\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\n\nfunction Home(props: Props) {\n  return (\n    <div>\n      <MenuComponent sessionActive={props.sessionActive} title={'Futbol APuestas'}/>\n      <Carousel\n        autoplay={true}\n        draggable={true}\n        swipeToSlide={true}\n        adaptiveHeight={true}\n        dots={true}\n        dotPosition={'bottom'}>\n        <Card\n          hoverable={true}\n          cover={\n            <Image\n              placeholder={<LoadingOutlined spin={true} />}\n              preview={false}\n              src={\n                'https://media.foxdeportes.com/photos/cache/1024x574/photos/2018/02/07/5a7ba71046f7c.jpeg'\n              }\n            />\n          }>\n          <Card.Meta\n            title={'Partidos'}\n            description={\n              'Encuentra informacion sobre partidos, ligas, torneos, etc.'\n            }\n          />\n        </Card>\n        <Card\n          hoverable={true}\n          cover={\n            <Image\n              placeholder={<LoadingOutlined spin={true} />}\n              preview={false}\n              src={\n                'http://www.mundoesotericoparanormal.com/wp-content/uploads/2015/10/loteria-vision-remota.jpg'\n              }\n            />\n          }>\n          <Card.Meta\n            title={'Predicciones'}\n            description={\n              'Encuentra las mejores predicciones calculadas por nuestro clon de Albert Einstein'\n            }\n          />\n        </Card>\n        <Card\n          hoverable={true}\n          cover={\n            <Image\n              placeholder={<LoadingOutlined spin={true} />}\n              preview={false}\n              src={\n                'https://www.rushbet.co/blog/wp-content/uploads/2020/12/shutterstock_1505491208-1.jpg'\n              }\n            />\n          }>\n          <Card.Meta\n            title={'Apuestas'}\n            description={'Apuesta por tus equipos y/o jugadores favoritos'}\n          />\n        </Card>\n        <Card\n          hoverable={true}\n          cover={\n            <Image\n              placeholder={<LoadingOutlined spin={true} />}\n              preview={false}\n              src={\n                'http://4.bp.blogspot.com/-XslnkJaFqNA/UdjF4FchoHI/AAAAAAAAOHU/7bkDnpZ78KA/s1600/lionel+messi+bicycle+kick+photo+moment+5.jpg'\n              }\n            />\n          }>\n          <Card.Meta\n            title={'Estadisticas'}\n            description={\n              'Encuentra estadisticas generales y por partidos de equipos y jugadores'\n            }\n          />\n        </Card>\n      </Carousel>\n    </div>\n  );\n}\n\nexport default connector(Home);\n","import React, {useState} from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {Form, Button, Modal, Input, message, Select} from 'antd';\nimport axios from 'axios';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport type {RootState} from '../state-store/reducer.root';\n\nconst { Option } = Select;\n\nconst mapDispatchToProps = {\n  reduxSetBalance: (balance: number) => ({\n    type: 'SET_USER_BALANCE',\n    balance: balance,\n  }),\n};\nconst mapStateToProps = (state: RootState) => ({\n  token: state.session.token,\n});\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux & {\n  visible: boolean;\n  onCancel: () => void;\n};\n\ninterface FormValues {\n  bank: string;\n  ref: string;\n  acc_number: string;\n  date: string;\n  balance: string;\n}\n\nfunction BalanceForm(props: Props) {\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState('Submit');\n  const [form] = Form.useForm();\n\n  const onSubmit = async (values: FormValues) => {\n    try {\n      setLoading(true);\n      setTitle('');\n      const response = await axios.post('/users/user/balance', values, {\n        headers: {authorization: props.token},\n      });\n      props.reduxSetBalance(response.data.balance);\n      message.success('Operacion exitosa!');\n    } catch (err) {\n      message.error(err.response.data.message);\n    } finally {\n      setLoading(false);\n      setTitle('Submit');\n    }\n  };\n\n  const onGenderChange = (value: any) => {\n    switch (value) {\n      case 'BOD':\n        form.setFieldsValue({\n          note: 'BOD',\n        });\n        return;\n\n      case 'Banesco':\n        form.setFieldsValue({\n          note: 'Banesco',\n        });\n        return;\n\n      case 'BA':\n        form.setFieldsValue({\n          note: 'Bank of America',\n        });\n        return;\n\n      case 'Provincial':\n        form.setFieldsValue({\n          note: 'Provincial',\n        });\n    }\n  };\n\n  return (\n    <Modal visible={props.visible} onCancel={props.onCancel} footer={null}>\n      <Form layout={'vertical'} onFinish={onSubmit}>\n        \n        <Form.Item\n          label={'Banco'}\n          name={'bank'}\n          hasFeedback>\n            <Select\n              placeholder=\"Select a option and change input text above\"\n              onChange={onGenderChange}\n              allowClear\n            >\n              <Option value=\"BOD\">BOD</Option>\n              <Option value=\"Banesco\">Banesco</Option>\n              <Option value=\"Provincial\">Provincial</Option>\n              <Option value=\"BA\">Bank of America</Option>\n            </Select>\n        </Form.Item>\n        <Form.Item\n          label={'Referencia'}\n          name={'ref'}\n          hasFeedback\n          rules={[\n            {required: true, message: 'Introduce la referencia'},\n            {\n              min: 8,\n              max: 8,\n              message: 'Referencia invalida',\n            },\n          ]}>\n          <Input type={'number'} />\n        </Form.Item>\n        <Form.Item\n          label={'Numero de cuenta'}\n          name={'acc_number'}\n          hasFeedback\n          rules={[\n            {required: true, message: 'Introduce el numero de cuenta'},\n            {\n              min: 15,\n              max: 15,\n              message: 'Numero de cuenta invalido',\n            },\n          ]}>\n          <Input type={'number'} />\n        </Form.Item>\n        <Form.Item\n          label={'Fecha'}\n          name={'date'}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Introduce la fecha de pago',\n            },\n          ]}>\n          <Input type={'date'} />\n        </Form.Item>\n        <Form.Item\n          label={'Saldo a transferir'}\n          hasFeedback\n          name={'balance'}\n          rules={[\n            {\n              required: true,\n              message: 'Introduce un valor!',\n            },\n            {\n              min: 4,\n              message: 'Un valor de al menos 4 digitos',\n            },\n          ]}>\n          <Input type={'number'} />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            disabled={loading}\n            htmlType={'submit'}\n            icon={\n              <LoadingOutlined\n                hidden={!loading}\n                spin={true}\n                style={{\n                  color: 'lime',\n                }}\n              />\n            }>\n            {title}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default connector(BalanceForm);\n","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport MenuComponent from '../components/pageHeader';\nimport BalanceForm from '../components/balanceForm';\nimport {\n  List,\n  Descriptions,\n  Popconfirm,\n  message,\n  Skeleton,\n  Tag,\n  Table,\n} from 'antd';\nimport {\n  PDFDownloadLink,\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n} from '@react-pdf/renderer';\n\nimport type {RootState} from '../state-store/reducer.root';\nimport type {Balance} from '../types/balanceInformation';\nimport type {Bet} from '../types/bets';\nimport axios from 'axios';\n\nconst mapStateToProps = (state: RootState) => ({\n  username: state.session.username,\n  sessionActive: state.session.isSessionActive,\n  token: state.session.token,\n  balance: state.session.balance,\n});\nconst mapDispatchToProps = {\n  reduxSetBalance: (balance: number) => ({\n    type: 'SET_USER_BALANCE',\n    balance: balance,\n  }),\n};\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\ntype State = {\n  bets: Bet[];\n  Data: Balance[];\n  Profit: number;\n  load: boolean;\n  email: string;\n  visible: boolean;\n};\n\nclass Profile extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      Data: [],\n      bets: [],\n      Profit: 0,\n      load: true,\n      email: '',\n      visible: false,\n    };\n    this.getData.bind(this);\n    this.deleteBet.bind(this);\n  }\n\n  private async getData() {\n    try {\n      this.setState({\n        ...this.state,\n        load: true,\n      });\n      const response = await axios.get('/users/user', {\n        headers: {authorization: this.props.token},\n      });\n      if (response.data.profile.email === 'futbol.apuestas.v01@gmail.com') {\n        const res = await axios.get('/bets/report', {\n          headers: {authorization: this.props.token},\n        });\n        this.setState({\n          ...this.state,\n          Data: res.data.bets,\n          Profit: res.data.profit,\n        });\n      }\n      this.setState({\n        ...this.state,\n        email: response.data.profile.email,\n        load: false,\n        bets: response.data.bets,\n      });\n      this.props.reduxSetBalance(response.data.profile.balance);\n    } catch (err) {\n      console.log(err);\n      message.error('Error cargando el perfil :(');\n    }\n  }\n\n  async deleteBet(id: string) {\n    try {\n      message.info('Eliminando apuesta...');\n      const response = await axios.delete(`/bets/bet/${id}`, {\n        headers: {authorization: this.props.token},\n      });\n      this.props.reduxSetBalance(response.data.balance);\n      message.success('Apuesta eliminada');\n    } catch (err) {\n      message.error('Error borrando la apuesta');\n    } finally {\n      this.getData();\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  private _listItem(item: Bet, index: number) {\n    return (\n      <Popconfirm\n        title={'Selecciona una accion'}\n        onConfirm={() => this.deleteBet(item.bet)}\n        okText={item.status === 'PENDING' ? 'Cancelar apuesta' : 'Borrar'}\n        cancelText={'X'}>\n        <List.Item key={index}>\n          <Descriptions layout={'vertical'} title={item.team_name}>\n            <Descriptions.Item label={'Dinero apostado'}>\n              {`$${item.ammount}`}\n            </Descriptions.Item>\n            <Descriptions.Item label={'Tipo de apuesta'}>\n              {item.bet_name}\n            </Descriptions.Item>\n            <Descriptions.Item label={'Status'}>\n              {item.status}\n            </Descriptions.Item>\n            <Descriptions.Item label={'Prediccion'}>\n              {item.prediction}\n            </Descriptions.Item>\n          </Descriptions>\n        </List.Item>\n      </Popconfirm>\n    );\n  }\n\n  render() {\n    const columns = [\n      {\n        title: 'Nombre',\n        dataIndex: 'user_name',\n        key: 'user_name',\n      },\n      {\n        title: 'Apellido',\n        dataIndex: 'last_name',\n        key: 'last_name',\n      },\n      {\n        title: 'Torneo',\n        dataIndex: 'tournament_name',\n        key: 'tournament_name',\n      },\n      {\n        title: 'Fecha',\n        dataIndex: 'created',\n        key: 'created',\n      },\n      {\n        title: 'Monto $',\n        dataIndex: 'ammount',\n        key: 'ammount',\n      },\n      {\n        title: 'Tipo de apuesta',\n        dataIndex: 'bet_type_name',\n        key: 'bet_type_name',\n      },\n      {\n        title: 'Equipo',\n        dataIndex: 'team_name',\n        key: 'team_name',\n      },\n      {\n        title: 'Equipo es',\n        dataIndex: 'side',\n        key: 'side',\n      },\n    ];\n    return (\n      <div>\n        <MenuComponent\n          sessionActive={this.props.sessionActive}\n          title={'Perfil'}\n        />\n        <div>\n          {this.state.email !== 'futbol.apuestas.v01@gmail.com' ? (\n            <div>\n              <Descriptions layout={'vertical'} bordered>\n                <Descriptions.Item label={'Nombre'}>\n                  <Skeleton\n                    active\n                    loading={this.state.load}\n                    paragraph={{rows: 0}}>\n                    {this.props.username}\n                  </Skeleton>\n                </Descriptions.Item>\n                <Descriptions.Item label={'Correo'}>\n                  <Skeleton\n                    active\n                    loading={this.state.load}\n                    paragraph={{rows: 0}}>\n                    {this.state.email}\n                  </Skeleton>\n                </Descriptions.Item>\n                <Descriptions.Item label={'Saldo'} style={labelStyle}>\n                  <Skeleton\n                    active\n                    loading={this.state.load}\n                    paragraph={{rows: 0}}>\n                    {`$${this.props.balance}`}\n                    {'  '}\n                    <Tag\n                      color={'success'}\n                      style={{cursor: 'pointer'}}\n                      onClick={() =>\n                        this.setState({...this.state, visible: true})\n                      }>\n                      Añadir saldo\n                    </Tag>\n                  </Skeleton>\n                </Descriptions.Item>\n              </Descriptions>\n              <List\n                loading={this.state.load}\n                bordered\n                size={'large'}\n                dataSource={this.state.bets}\n                itemLayout={'horizontal'}\n                header={<b>Mis Apuestas</b>}\n                renderItem={this._listItem.bind(this)}\n              />\n              <BalanceForm\n                visible={this.state.visible}\n                onCancel={() => this.setState({...this.state, visible: false})}\n              />\n            </div>\n          ) : (\n            <div>\n              <Table\n                dataSource={this.state.Data}\n                columns={columns}\n                size='small'\n                loading={this.state.load}\n              />\n              <h2>Total de Apuestas: ${this.state.Profit}</h2>\n              <h2>Ganancias: ${this.state.Profit * 0.2}</h2>\n              <div\n                style={{\n                  paddingBottom: 50,\n                  display: 'flex',\n                  justifyContent: 'center',\n                }}>\n                <PDFDownloadLink\n                  document={\n                    <Document>\n                      <Page>\n                        <View style={docStyles.View}>\n                          <Text style={docStyles.Text}>\n                            Balance de Apuestas:\n                          </Text>\n                          <Text style={docStyles.Text}>\n                            Total de Apuestas: ${this.state.Profit}\n                          </Text>\n                          <Text style={docStyles.Text}>\n                            Ganancias: ${this.state.Profit * 0.2}\n                          </Text>\n                        </View>\n                      </Page>\n                      {this.state.Data.map((user, index) => {\n                        return (\n                          <Page>\n                            <View style={docStyles.View}>\n                              <Text style={docStyles.Text}>\n                                Aportador #{index + 1}\n                              </Text>\n                              <Text>\n                                Apostador: {user.user_name} {user.last_name}\n                              </Text>\n                              <Text>Torneo: {user.tournament_name}</Text>\n                              <Text>\n                                Fecha:{' '}\n                                {new Date(user.created)\n                                  .toUTCString()\n                                  .substr(0, 17)}\n                              </Text>\n                              <Text>Tipo de apuesta: {user.bet_type_name}</Text>\n                              <Text>Monto: ${user.ammount}</Text>\n                              <Text>Equipo: {user.team_name}</Text>\n                              <Text>Equipo es: {user.side}</Text>\n                              <Text>\n                                Resultado del partido: {user.team_name}{' '}\n                                {user.winner\n                                  ? 'ganó'\n                                  : user.loser\n                                  ? 'Perdió'\n                                  : 'Empató'}\n                              </Text>\n                            </View>\n                          </Page>\n                        );\n                      })}\n                    </Document>\n                  }\n                  fileName={\n                    'Apuestas ' +\n                    new Date().toUTCString().substr(0, 16) +\n                    '.pdf'\n                  }\n                  style={{\n                    textDecoration: 'none',\n                    padding: '10px',\n                    color: '#4a4a4a',\n                    backgroundColor: '#f2f2f2',\n                    border: '1px solid #4a4a4a',\n                  }}>\n                  {({blob, url, loading, error}) =>\n                    loading ? 'Loading document...' : 'Download Pdf'\n                  }\n                </PDFDownloadLink>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst labelStyle: React.CSSProperties = {\n  fontWeight: 'bold',\n  fontSize: 15,\n};\n\nconst docStyles = StyleSheet.create({\n  View: {\n    alignSelf: 'center',\n    textAlign: 'justify',\n  },\n  Text: {\n    margin: 13,\n  },\n});\n\nexport default connector(Profile);\n","import React, {useState, useEffect} from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {Form, Button, Modal, Input, message, Select, Typography} from 'antd';\nimport axios from 'axios';\nimport {LoadingOutlined} from '@ant-design/icons';\n\nimport type {RootState} from '../state-store/reducer.root';\nimport type {MatchInfo} from '../types/tournaments';\n\nconst mapDispatchToProps = {\n  reduxSetBalance: (balance: number) => ({\n    type: 'SET_USER_BALANCE',\n    balance: balance,\n  }),\n};\nconst mapStateToProps = (state: RootState) => ({\n  token: state.session.token,\n  balance: state.session.balance,\n});\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nconst scoreRegex: RegExp = /^[0-9]{1,2}:[0-9]{1,2}$/g;\nconst goalsRegex: RegExp = /^[0-9]{1,2}$/g;\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux & {\n  visible: boolean;\n  onCancel: () => void;\n  match?: MatchInfo;\n};\n\ninterface FormValues {\n  prediction: string;\n  bet_type?:\n    | '1'\n    | '2'\n    | 'X'\n    | '1X'\n    | 'X2'\n    | '1 or 2'\n    | 'over'\n    | 'under'\n    | 'Correct score';\n  ammount: number;\n}\n\nfunction BettingForm(props: Props) {\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState('Submit');\n  const [bet_type, setBet_type] = useState<string | undefined>();\n  const [team, setTeam] = useState<undefined | number>();\n\n  const verify = (select_val: string | undefined) => {\n    setBet_type(select_val);\n    if (!select_val) {\n      setTeam(undefined);\n      return;\n    }\n    switch (select_val) {\n      case '1': {\n        setTeam(props.match?.home_team_id);\n        break;\n      }\n      case '2': {\n        setTeam(props.match?.away_team_id);\n        break;\n      }\n      case '1X': {\n        setTeam(props.match?.home_team_id);\n        break;\n      }\n      case 'X2': {\n        setTeam(props.match?.away_team_id);\n        break;\n      }\n      default: {\n        setTeam(props.match?.home_team_id);\n        break;\n      }\n    }\n  };\n\n  const onSubmit = async (values: FormValues) => {\n    try {\n      if (!bet_type) {\n        throw new Error('Seleccione un tipo de apuesta!');\n      }\n      if (values.ammount <= 0) {\n        throw new Error('Inserte una cantidad valida');\n      }\n      if (values.ammount > props.balance) {\n        throw new Error('Saldo insuficiente');\n      }\n      setLoading(true);\n      setTitle('Guardando apuesta');\n      const response = await axios.post(\n        '/bets/bet',\n        {\n          ...values,\n          match: props.match?.match_id,\n          team: team,\n        },\n        {\n          headers: {authorization: props.token},\n        }\n      );\n      props.reduxSetBalance(response.data.balance);\n      values.bet_type = undefined;\n      message.success('Operacion exitosa!');\n    } catch (err) {\n      message.error('No se pudo procesar la transaccion.');\n    } finally {\n      setLoading(false);\n      setTitle('Submit');\n    }\n  };\n\n  useEffect(() => {\n    setBet_type(undefined);\n    setTeam(undefined);\n  }, [props.visible]);\n\n  return (\n    <Modal visible={props.visible} onCancel={props.onCancel} footer={null}>\n      <Typography.Title level={2}>\n        Saldo actual: ${props.balance}\n      </Typography.Title>\n      <Form layout={'vertical'} onFinish={onSubmit}>\n        <Form.Item\n          label={'Tipo de apuesta'}\n          hasFeedback\n          name={'bet_type'}\n          rules={[\n            {\n              required: true,\n              message: 'Seleccione un tipo de apuesta!',\n            },\n          ]}>\n          <Select allowClear onChange={value => verify(value?.toString())}>\n            <Select.Option value='1'>Casa gana</Select.Option>\n            <Select.Option value='2'>Visitante gana</Select.Option>\n            <Select.Option value='X'>Empate</Select.Option>\n            <Select.Option value='1X'>Casa gana o empate</Select.Option>\n            <Select.Option value='X2'>Empate o visitante gana</Select.Option>\n            <Select.Option value='1 or 2'>\n              Casa gana o visitante gana\n            </Select.Option>\n            <Select.Option value='over'>Goles por encima</Select.Option>\n            <Select.Option value='under'>Goles por debajo</Select.Option>\n            <Select.Option value='Correct score'>Puntuacion</Select.Option>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label={'Prediccion'}\n          name={'prediction'}\n          hasFeedback\n          tooltip={\n            'En el caso de puntuacion el formato es puntosCasa:puntosVisitante. En el caso de under/over escriba el numero de goles'\n          }\n          rules={[\n            {\n              required:\n                bet_type === 'Correct score'\n                  ? true\n                  : bet_type === 'under'\n                  ? true\n                  : bet_type === 'over'\n                  ? true\n                  : false,\n              message: 'Introduzca la prediccion!',\n            },\n            {\n              pattern:\n                bet_type === 'Correct score'\n                  ? scoreRegex\n                  : bet_type === 'under'\n                  ? goalsRegex\n                  : bet_type === 'over'\n                  ? goalsRegex\n                  : /./g,\n              message: 'Formato incorrecto!',\n            },\n          ]}>\n          <Input type={'text'} />\n        </Form.Item>\n        <Form.Item\n          name={'ammount'}\n          label={'Cantidad a apostar'}\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Introduzca la cantidad a apostar',\n            },\n            {\n              min: 3,\n              message: 'Un valor de al menos 3 digitos',\n            },\n          ]}>\n          <Input type={'number'} />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            disabled={loading}\n            htmlType={'submit'}\n            icon={\n              <LoadingOutlined\n                hidden={!loading}\n                spin={true}\n                style={{\n                  color: 'lime',\n                }}\n              />\n            }>\n            {title}\n          </Button>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n}\n\nexport default connector(BettingForm);\n","import React from 'react';\nimport {message, Table, Input, Button, Space, Tabs, Tag, Calendar} from 'antd';\nimport Header from '../components/pageHeader';\nimport {connect, ConnectedProps} from 'react-redux';\nimport {MatchInfo} from '../types/tournaments';\nimport axios from 'axios';\nimport {SearchOutlined} from '@ant-design/icons';\nimport Highlighter from 'react-highlight-words';\nimport BettingForm from '../components/bettingForm';\nimport moment from 'moment';\n\nimport type {RootState} from '../state-store/reducer.root';\nimport type {ColumnsType} from 'antd/lib/table';\n\nconst mapStateToProps = (state: RootState) => ({\n  username: state.session.username,\n  sessionActive: state.session.isSessionActive,\n  token: state.session.token,\n});\nconst connector = connect(mapStateToProps, {});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\ninterface State {\n  tournament: string;\n  matches: MatchInfo[];\n  loading: boolean;\n  visibile: boolean;\n  match?: MatchInfo;\n  searchText: string;\n  searchedColumn: string;\n  value: any;\n}\n\nclass Matches extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      tournament: 'PD',\n      matches: [],\n      loading: true,\n      visibile: false,\n      searchText: '',\n      searchedColumn: '',\n      value: moment(new Date().getFullYear()+\"-\"+(new Date().getMonth() + 1)+\"-\"+new Date().getDate()),\n    };\n    this.fetchData.bind(this);\n    this.tabChanged.bind(this);\n  }\n\n  getColumnSearchProps = (dataIndex: any) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }: any) => (\n      <div style={{padding: 8}}>\n        <Input\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          onChange={e =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          style={{width: 188, marginBottom: 8, display: 'block'}}\n        />\n        <div style={{\n        width: '300px',\n        border: '1px solid #f0f0f0',\n        }}>\n          {dataIndex === 'date' ?\n            <Calendar fullscreen={false} value={this.state.value} \n            onSelect={e => {\n              let ee = e.toString();\n              setSelectedKeys(new Date(ee).toUTCString().substr(0,17) \n              ? [new Date(ee).toUTCString().substr(0,17)] \n              : []);\n              this.onSelect(e);\n            }} />\n            :\n            null\n          }\n        </div>\n        <Space>\n          <Button\n            type='primary'\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size='small'\n            style={{width: 90}}>\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size='small'\n            style={{width: 90}}>\n            Reset\n          </Button>\n          <Button\n            type='link'\n            size='small'\n            onClick={() => {\n              confirm({closeDropdown: false});\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex,\n              });\n            }}>\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered: any) => (\n      <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}} />\n    ),\n    onFilter: (value: any, record: any) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : '',\n    render: (text: any) =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  onSelect = (value: any) => {\n    let date = new Date(value).toUTCString().substr(0,17);\n    this.setState({\n      value: value,\n      searchText: date\n    });\n  };\n\n  handleSearch = (selectedKeys: any, confirm: any, dataIndex: any) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters: any) => {\n    clearFilters();\n    this.setState({searchText: ''});\n  };\n\n  columns: ColumnsType<MatchInfo> = [\n    {\n      title: 'Equipos',\n      dataIndex: 'teams',\n      key: 'teams',\n      children: [\n        {\n          title: 'Casa',\n          key: 'Home team',\n          children: [\n            {\n              title: 'Nombre',\n              key: 'home_team_name',\n              dataIndex: 'home_team_name',\n              ...this.getColumnSearchProps('home_team_name'),\n            },\n            {\n              title: 'Goles',\n              key: 'home_goals',\n              dataIndex: 'home_goals',\n            },\n            {\n              title: 'Resultado',\n              key: 'home_status',\n              dataIndex: 'home_status',\n            },\n          ],\n        },\n        {\n          title: 'Visitante',\n          key: 'Away team',\n          children: [\n            {\n              title: 'Nombre',\n              key: 'away_team_name',\n              dataIndex: 'away_team_name',\n              ...this.getColumnSearchProps('away_team_name'),\n            },\n            {\n              title: 'Goles',\n              key: 'away_goals',\n              dataIndex: 'away_goals',\n            },\n            {\n              title: 'Resultado',\n              key: 'away_status',\n              dataIndex: 'away_status',\n            },\n          ],\n        },\n      ],\n    },\n    {\n      title: 'Fecha',\n      key: 'date',\n      dataIndex: 'date',\n      ...this.getColumnSearchProps('date'),\n      sorter: (recordA, recordB) =>\n        new Date(recordA.date).getTime() - new Date(recordB.date).getTime(),\n      sortDirections: ['ascend', 'descend'],\n    },\n    {\n      title: 'Estado',\n      key: 'match_status',\n      dataIndex: 'match_status',\n      filters: [\n        {text: 'FINISHED', value: 'FINISHED'},\n        {text: 'SCHEDULED', value: 'SCHEDULED'},\n        {text: 'AWARDED', value: 'AWARDED'},\n      ],\n      onFilter: (value, record) => record.match_status === value,\n      sortDirections: ['ascend', 'descend'],\n      sorter: (recordA, recordB) =>\n        recordA.match_status.length - recordB.match_status.length,\n    },\n    {\n      title: 'Apuesta',\n      key: 'bet',\n      render: (value, record, index) => (\n        <Tag\n          onClick={() => {\n            if (record.match_status === 'SCHEDULED') {\n              this.setState({...this.state, visibile: true, match: record});\n            }\n          }}\n          style={{cursor: 'pointer'}}\n          color={record.match_status === 'SCHEDULED' ? 'gold' : 'volcano'}>\n          {record.match_status === 'SCHEDULED'\n            ? 'Apostar'\n            : 'Apuestas cerradas'}\n        </Tag>\n      ),\n    },\n  ];\n\n  private tabChanged(\n    key: string,\n    e: React.MouseEvent<Element, Event> | React.KeyboardEvent<Element>\n  ) {\n    this.setState({\n      ...this.state,\n      tournament: key,\n      loading: true,\n    });\n    this.fetchData();\n  }\n\n  private async fetchData() {\n    try {\n      const response = await axios.get<{matches: MatchInfo[]}>(\n        `/tournaments/${this.state.tournament}/matches`\n      );\n      this.setState({\n        ...this.state,\n        matches: response.data.matches,\n      });\n    } catch (err) {\n      message.error('Error cargando los partidos.');\n    } finally {\n      this.setState({\n        ...this.state,\n        loading: false,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header sessionActive={this.props.sessionActive} title={'Partidos y Apuestas'} />\n        <Tabs\n          defaultActiveKey={'PD'}\n          centered\n          animated\n          onTabClick={this.tabChanged.bind(this)}>\n          <Tabs.TabPane tab={'Primera division'} key={'PD'} />\n          <Tabs.TabPane tab={'Champions league'} key={'CL'} />\n          <Tabs.TabPane tab={'Copa mundial'} key={'WC'} />\n        </Tabs>\n        <Table\n          loading={this.state.loading}\n          bordered\n          dataSource={this.state.matches}\n          columns={this.columns}\n        />\n        <BettingForm\n          visible={this.state.visibile}\n          match={this.state.match}\n          onCancel={() => this.setState({...this.state, visibile: false})}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connector(Matches);\n","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport MenuComponent from '../components/pageHeader';\nimport {message, Table, Input, Button, Space, Tabs} from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport {SearchOutlined} from '@ant-design/icons';\n\nimport type {RootState} from '../state-store/reducer.root';\nimport type {Scorer, TopTeams} from '../types/stats';\nimport axios from 'axios';\n\nconst mapStateToProps = (state: RootState) => ({\n  username: state.session.username,\n  sessionActive: state.session.isSessionActive,\n  token: state.session.token,\n});\nconst connector = connect(mapStateToProps, {});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\ntype State = {\n  top: Scorer[];\n  topTeam: TopTeams[];\n  loading: boolean;\n  loading2: boolean;\n  searchText: string;\n  searchedColumn: string;\n};\n\nclass Stats extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      top: [],\n      topTeam: [],\n      loading: true,\n      loading2: true,\n      searchText: '',\n      searchedColumn: '',\n    };\n    this.getData.bind(this);\n    this.tabChanged.bind(this);\n  }\n\n  private async getData(season: string) {\n    try {\n      this.setState({\n        ...this.state,\n        loading: true,\n        loading2: true,\n      });\n      const response = await axios.get('/stats/topScore/' + season, {\n        headers: {authorization: this.props.token},\n      });\n      this.setState({\n        ...this.state,\n        top: response.data,\n        loading: false,\n      });\n      const responseTeam = await axios.get('/stats/topTeams/' + season, {\n        headers: {authorization: this.props.token},\n      });\n      this.setState({\n        ...this.state,\n        topTeam: responseTeam.data,\n        loading2: false,\n      });\n    } catch (err) {\n      message.error('Error al obtener Estadisticas :(');\n    }\n  }\n\n  componentDidMount() {\n    this.getData('635');\n  }\n  \n  private tabChanged(\n    key: string,\n    e: React.MouseEvent<Element, Event> | React.KeyboardEvent<Element>\n  ) {\n    this.getData(key);\n  }\n\n  getColumnSearchProps = (dataIndex: any) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }: any) => (\n      <div style={{padding: 8}}>\n        <Input\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{width: 188, marginBottom: 8, display: 'block'}}\n        />\n        <Space>\n          <Button\n            type='primary'\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size='small'\n            style={{width: 90}}>\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size='small'\n            style={{width: 90}}>\n            Reset\n          </Button>\n          <Button\n            type='link'\n            size='small'\n            onClick={() => {\n              confirm({closeDropdown: false});\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex,\n              });\n            }}>\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered: any) => (\n      <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}} />\n    ),\n    onFilter: (value: any, record: any) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : '',\n    render: (text: any) =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys: any, confirm: any, dataIndex: any) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters: any) => {\n    clearFilters();\n    this.setState({searchText: ''});\n  };\n\n  render() {\n    const columns = [\n      {\n        title: 'Top',\n        dataIndex: 'top',\n        key: 'top',\n      },\n      {\n        title: 'Equipo',\n        dataIndex: 'team',\n        key: 'team',\n        ...this.getColumnSearchProps('team'),\n      },\n      {\n        title: 'Jugador',\n        dataIndex: 'player',\n        key: 'player',\n        ...this.getColumnSearchProps('player'),\n        render: (name: string) => (\n          <a\n            href={`https://www.google.com/search?q=${name}+futbol`}\n            target='_blank'\n            rel='noreferrer'>\n            {name}\n          </a>\n        ),\n      },\n      {\n        title: 'Goles',\n        dataIndex: 'number_goals',\n        key: 'number_goals',\n      },\n    ];\n\n    const columnsTopTeams = [\n      {\n        title: 'Top',\n        dataIndex: 'top',\n        key: 'top',\n      },\n      {\n        title: 'Equipo',\n        dataIndex: 'team_name',\n        key: 'team_name',\n        ...this.getColumnSearchProps('team_name'),\n        render: (name: string) => (\n          <a\n            href={`https://www.google.com/search?q=${name}+futbol`}\n            target='_blank'\n            rel='noreferrer'>\n            {name}\n          </a>\n        ),\n      },\n      {\n        title: 'Jugados',\n        dataIndex: 'total_matches',\n        key: 'total_matches',\n      },\n      {\n        title: 'Total de Goles',\n        dataIndex: 'total_goals',\n        key: 'total_goals',\n      },\n      {\n        title: 'Total de Victorias',\n        dataIndex: 'total_winner',\n        key: 'total_winner',\n      },\n      {\n        title: 'Total de Derrotas',\n        dataIndex: 'total_loser',\n        key: 'total_loser',\n      },\n      {\n        title: 'Total de Empates',\n        dataIndex: 'total_draw',\n        key: 'total_draw',\n      },\n    ];\n\n    return (\n      <div>\n        <MenuComponent sessionActive={this.props.sessionActive} title={'Estadisticas'} />\n        <Tabs\n          defaultActiveKey={'635'}\n          centered\n          animated\n          onTabClick={this.tabChanged.bind(this)}>\n          <Tabs.TabPane tab={'Primera division'} key={'635'} />\n          <Tabs.TabPane tab={'Champions league'} key={'1'} />\n          <Tabs.TabPane tab={'Copa mundial'} key={'642'} />\n        </Tabs>\n        <h2>Top de Goleadores:</h2>\n        <Table\n          dataSource={this.state.top}\n          columns={columns}\n          size='small'\n          loading={this.state.loading}\n        />\n\n        <h2 style={{marginTop: 10}}>Top de Equipos: </h2>\n        <Table\n          dataSource={this.state.topTeam}\n          columns={columnsTopTeams}\n          size='small'\n          loading={this.state.loading2}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connector(Stats);","import React from 'react';\nimport {message, List, Tag} from 'antd';\nimport {connect, ConnectedProps} from 'react-redux';\nimport axios from 'axios';\nimport Header from '../components/pageHeader';\n\nimport type {RootState} from '../state-store/reducer.root';\nimport type {Notification} from '../types/bets';\n\nconst mapStateToProps = (state: RootState) => ({\n  username: state.session.username,\n  sessionActive: state.session.isSessionActive,\n  token: state.session.token,\n});\nconst connector = connect(mapStateToProps, {});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\ninterface State {\n  loading: boolean;\n  notifications: Notification[];\n}\n\nclass Matches extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: true,\n      notifications: [],\n    };\n    this.getNotifications.bind(this);\n  }\n\n  private async getNotifications() {\n    try {\n      const response = await axios.get('/bets/notifications', {\n        headers: {authorization: this.props.token},\n      });\n      this.setState({\n        ...this.state,\n        notifications: response.data.notifications,\n      });\n    } catch (err) {\n      message.error('Error cargando las notificaciones!');\n    } finally {\n      this.setState({\n        ...this.state,\n        loading: false,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.getNotifications();\n  }\n\n  private _listItem = (item: Notification, index: number) => (\n    <List.Item key={index}>\n      <List.Item.Meta\n        title={`${item.home_team} vs ${item.away_team}`}\n        description={item.tournament_name}></List.Item.Meta>\n      <List.Item.Meta\n        title={`Bet: ${item.bet_type}`}\n        description={item.status}></List.Item.Meta>\n      <p\n        style={{\n          color: item.status === 'WINNER' ? 'green' : 'red',\n        }}>\n        {`${item.message.substring(0, 1)} $${item.message.substring(\n          1,\n          item.message.length\n        )}`}\n      </p>\n    </List.Item>\n  );\n\n  render() {\n    return (\n      <div>\n        <Header\n          sessionActive={this.props.sessionActive}\n          title={'Notificaciones'}\n        />\n        <List\n          loading={this.state.loading}\n          bordered\n          dataSource={this.state.notifications}\n          renderItem={this._listItem}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connector(Matches);\n","import React from 'react';\nimport {connect, ConnectedProps} from 'react-redux';\nimport MenuComponent from '../components/pageHeader';\nimport {message, Table, Input, Button, Space, Tabs, Calendar} from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport {SearchOutlined} from '@ant-design/icons';\nimport moment from 'moment';\n\nimport type {RootState} from '../state-store/reducer.root';\nimport type {Prediction, PredictionMatches} from '../types/predictions';\nimport axios from 'axios';\nimport {ColumnsType} from 'antd/lib/table';\n\nconst mapStateToProps = (state: RootState) => ({\n  username: state.session.username,\n  sessionActive: state.session.isSessionActive,\n  token: state.session.token,\n});\nconst connector = connect(mapStateToProps, {});\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\ntype Props = PropsFromRedux;\ntype State = {\n  prediction: Prediction[];\n  predictionMatches: PredictionMatches[];\n  loading: boolean;\n  loading2: boolean;\n  searchText: string;\n  searchedColumn: string;\n  value: any;\n};\n\nclass Predictions extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      prediction: [],\n      predictionMatches: [],\n      loading: true,\n      loading2: true,\n      searchText: '',\n      searchedColumn: '',\n      value: moment(new Date().getFullYear()+\"-\"+(new Date().getMonth() + 1)+\"-\"+new Date().getDate()),\n    };\n    this.getData.bind(this);\n    this.tabChanged.bind(this);\n  }\n\n  private async getData(season: string) {\n    try {\n      this.setState({\n        ...this.state,\n        loading: true,\n        loading2: true,\n      });\n      const response = await axios.get('/tournaments/prediction/' + season, {\n        headers: {authorization: this.props.token},\n      });\n      this.setState({\n        ...this.state,\n        prediction: response.data,\n        loading: false,\n      });\n      const responseMatchs = await axios.get(\n        'tournaments/prediction/matches/' + season,\n        {\n          headers: {authorization: this.props.token},\n        }\n      );\n      this.setState({\n        ...this.state,\n        predictionMatches: responseMatchs.data,\n        loading2: false,\n      });\n    } catch (err) {\n      message.error('Error al obtener Estadisticas :(');\n    }\n  }\n\n  componentDidMount() {\n    this.getData('635');\n  }\n\n  private tabChanged(\n    key: string,\n    e: React.MouseEvent<Element, Event> | React.KeyboardEvent<Element>\n  ) {\n    this.getData(key);\n  }\n\n  getColumnSearchProps = (dataIndex: any) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }: any) => (\n      <div style={{padding: 8}}>\n        <Input\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          onChange={e =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          style={{width: 188, marginBottom: 8, display: 'block'}}\n        />\n        <div style={{\n        width: '300px',\n        border: '1px solid #f0f0f0',\n        }}>\n          {dataIndex === 'date'?\n            <Calendar fullscreen={false} value={this.state.value} \n            onSelect={e => {\n              let ee = e.toString();\n              setSelectedKeys(new Date(ee).toUTCString().substr(0,17) \n              ? [new Date(ee).toUTCString().substr(0,17)] \n              : []);\n              this.onSelect(e);\n            }} />\n            : null\n          }\n        </div>\n        <Space>\n          <Button\n            type='primary'\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size='small'\n            style={{width: 90}}>\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size='small'\n            style={{width: 90}}>\n            Reset\n          </Button>\n          <Button\n            type='link'\n            size='small'\n            onClick={() => {\n              confirm({closeDropdown: false});\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex,\n              });\n            }}>\n            Filter\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered: any) => (\n      <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}} />\n    ),\n    onFilter: (value: any, record: any) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : '',\n    render: (text: any) =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  onSelect = (value: any) => {\n    let date = new Date(value).toUTCString().substr(0,17);\n    this.setState({\n      value: value,\n      searchText: date\n    });\n  };\n\n  handleSearch = (selectedKeys: any, confirm: any, dataIndex: any) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters: any) => {\n    clearFilters();\n    this.setState({searchText: ''});\n  };\n\n  render() {\n    const columns = [\n      {\n        title: 'Equipo',\n        dataIndex: 'team_name',\n        key: 'team_name',\n        ...this.getColumnSearchProps('team_name'),\n      },\n      {\n        title: 'Probabilidad de victoria',\n        dataIndex: 'p_winner',\n        key: 'p_winner',\n      },\n      {\n        title: 'Probabilidad de derrota',\n        dataIndex: 'p_loser',\n        key: 'p_loser',\n      },\n      {\n        title: 'Probabilidad de empatar',\n        dataIndex: 'p_draw',\n        key: 'p_draw',\n      },\n    ];\n\n    const columnsMatches: ColumnsType<PredictionMatches> = [\n      {\n        title: 'Equipo 1',\n        dataIndex: 'name1',\n        key: 'name1',\n        ...this.getColumnSearchProps('name1'),\n      },\n      {\n        title: 'Jugando como',\n        dataIndex: 'side1',\n        key: 'side1',\n      },\n      {\n        title: 'Equipo 1 gana',\n        dataIndex: 'tm1_winner',\n        key: 'tm1_winner',\n      },\n      {\n        title: 'Empatan',\n        dataIndex: 'tm_draw',\n        key: 'tm_draw',\n      },\n      {\n        title: 'Equipo 2 gana',\n        dataIndex: 'tm2_winner',\n        key: 'tm2_winner',\n      },\n      {\n        title: 'Equipo 2',\n        dataIndex: 'name2',\n        key: 'name2',\n      },\n      {\n        title: 'Jugando como',\n        dataIndex: 'side2',\n        key: 'side2',\n      },\n      {\n        title: 'Resultado',\n        dataIndex: 'resultado',\n        key: 'resultado',\n      },\n      {\n        title: 'Estado',\n        dataIndex: 'match_status',\n        key: 'match_status',\n        filters: [\n          {text: 'FINISHED', value: 'FINISHED'},\n          {text: 'SCHEDULED', value: 'SCHEDULED'},\n        ],\n        onFilter: (value, record) => record.match_status === value,\n        sortDirections: ['ascend', 'descend'],\n        sorter: (recordA, recordB) =>\n          recordA.match_status.length - recordB.match_status.length,\n      },\n      {\n        title: 'Fecha',\n        dataIndex: 'date',\n        key: 'date',\n        ...this.getColumnSearchProps('date'),\n      },\n    ];\n\n    return (\n      <div>\n        <MenuComponent\n          sessionActive={this.props.sessionActive}\n          title={'Estadisticas'}\n        />\n        <Tabs\n          defaultActiveKey={'635'}\n          centered\n          animated\n          onTabClick={this.tabChanged.bind(this)}>\n          <Tabs.TabPane tab={'Primera division'} key={'635'} />\n          <Tabs.TabPane tab={'Champions league'} key={'1'} />\n          <Tabs.TabPane tab={'Copa mundial'} key={'642'} />\n        </Tabs>\n        <h2>Predicciones por equipos:</h2>\n        <Table\n          dataSource={this.state.prediction}\n          columns={columns}\n          size='small'\n          loading={this.state.loading}\n        />\n\n        <h2 style={{marginTop: 10}}>Predicciones por partidos: </h2>\n        <Table\n          dataSource={this.state.predictionMatches}\n          columns={columnsMatches}\n          size='small'\n          loading={this.state.loading2}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connector(Predictions);\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/es/integration/react';\nimport {persistor, store} from './state-store/store';\nimport axios from 'axios';\n\nimport Home from './pages/home';\nimport Profile from './pages/profile';\nimport Matches from './pages/matches';\nimport Stats from './pages/stats';\nimport Notifications from './pages/notifications';\nimport Predictions from './pages/predictions';\n\naxios.defaults.baseURL = 'http://localhost:8000';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path={'/'}>\n              <Home />\n            </Route>\n            <Route exact path={'/profile'}>\n              <Profile />\n            </Route>\n            <Route exact path={'/matches'}>\n              <Matches />\n            </Route>\n            <Route exact path={'/estadisticas'}>\n              <Stats />\n            </Route>\n            <Route exact path={'/predicciones'}>\n              <Predictions />\n            </Route>\n            <Route exact path={'/notifications'}>\n              <Notifications />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}